### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfrompartialreflections
name: ObliviousAmplitudeAmplificationFromPartialReflections
type: function
namespace: microsoft.quantum.amplitudeamplification
summary: 通过指定部分反射来返回实现在意波幅放大的单一单一。
syntax: 'function ObliviousAmplitudeAmplificationFromPartialReflections (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle)'
  types:
  - name: phases
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateReflection
    uid: microsoft.quantum.oracles.reflectionoracle
  - name: targetStateReflection
    uid: microsoft.quantum.oracles.reflectionoracle
  - name: signalOracle
    uid: microsoft.quantum.oracles.obliviousoracle
output:
  content: ((Qubit[], Qubit[]) => Unit is Adj + Ctl)
  types:
  - isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: 5cfe3f0cf8f4c9e3adc1e5adcadabc40b4296780
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91463852"
