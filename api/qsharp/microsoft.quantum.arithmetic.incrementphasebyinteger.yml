### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementphasebyinteger
name: IncrementPhaseByInteger
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  使用阶段旋转，将未签名的量程寄存器增加一个传统整数。


  假定将 `target` 无符号整数编码 $x $ in 小字节序编码，并且 `increment` 等于 $a $。

  然后，此操作实现一个单一 $ \ket{x} \mapsto \ket{x + a} $，其中添加操作执行取模 $ 2 ^ n $，其中 $n = \texttt{Length (target！ ) } $。
remarks: >-
  请注意，我们已简化了此线路，因为增量为传统常量，而不是量程寄存器。


  请参阅 [ arXiv： quant/0008033v1 的第6页 ](https://arxiv.org/pdf/quant-ph/0008033.pdf#page=6) 上的图和说明。
syntax: 'operation IncrementPhaseByInteger (increment : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
references: '- [*Thomas Draper*，arXiv： quant/0008033](https://arxiv.org/pdf/quant-ph/0008033v1.pdf)'
input:
  content: '(increment : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: increment
    summary: 的整数，该整数用于 `target` 递增。
    isPrimitive: true
    uid: Int
  - name: target
    summary: 在双 (QFT) 基础上，量程寄存器使用小字节序编码对无符号整数进行编码。
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- incrementbyintegerbe
- incrementbyintegerle
metadata:
  ms.openlocfilehash: fa0495c930c638b6caeb9d4f6352eb2377723fc5
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89342850"
