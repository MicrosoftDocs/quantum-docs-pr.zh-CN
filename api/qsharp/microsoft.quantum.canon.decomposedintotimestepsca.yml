### YamlMime:QSharpType
uid: microsoft.quantum.canon.decomposedintotimestepsca
name: DecomposedIntoTimeStepsCA
type: function
namespace: microsoft.quantum.canon
summary: 返回为给定操作实现 Trotter – Suzuki 集成器的操作。
remarks: >-
  当使用 `order` 等于时 `1` ，此函数将返回一个操作，该操作可由最低顺序 Trotter – Suzuki 集成器 $ $ \begin{align} S_1 ( \lambda) = \ prod_ {j = 1} ^ {m} e ^ {H_j \lambda}，\end{align} $ $，我们已遵循 [quant/0508139](https://arxiv.org/abs/quant-ph/0508139) 的表示法，并让 $ \lambda $ 成为) 的第一次输入所表示的演化时间 (并让 $ \{ H_j \} _ {j = 1} ^ {m} $ 是要集成的 (Hermitian) dynamical 生成器的集合，这 `op(j, lambda, _)` 是由单一运算符 $e ^ {H_j \lambda} $ 模拟的。


  同样， `order` `2` 返回第二顺序对称 Trotter – Suzuki 集成器 $ $ \begin{align} S_2 ( \lambda) = \ prod_ {j = 1} ^ {m} e ^ {H_k \lambda/2} \ prod_ {j ' = m} ^ {1} e ^ {H_ {j '} \lambda/2}。

  \end{align} $ $


  更高的值 `order` 是使用 [quant/0508139](https://arxiv.org/abs/quant-ph/0508139)的递归构造实现的。
syntax: "function DecomposedIntoTimeStepsCA ((nSteps : Int, op : ((Int, Double, 'T) => Unit is Adj + Ctl)), trotterOrder : Int) : ((Double, 'T) => Unit is Adj + Ctl)"
references: '- [*D. Berry，Ahokas，Cleve，Sanders，，*](https://arxiv.org/abs/quant-ph/0508139)'
input:
  content: "((nSteps : Int, op : ((Int, Double, 'T) => Unit is Adj + Ctl)), trotterOrder : Int)"
  types:
  - name: nSteps
    summary: 要分解为时间步长的操作数。
    isPrimitive: true
    uid: Int
  - name: op
    summary: 接受 (类型的索引输入 `Int`) 和时间输入 (类型 `Double` 为分解的) 的操作。
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Int
      - isPrimitive: true
        uid: Double
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: trotterOrder
    summary: >-
      选择要使用的 Trotter – Suzuki 集成器的顺序。

      订单1，甚至订单2，4，6,.。。当前支持。
    isPrimitive: true
    uid: Int
output:
  content: ((Double, 'T) => Unit is Adj + Ctl)
  types:
  - summary: 返回一个实现 Trotter – Suzuki 集成器的单一参数，其中第一个参数 `Double` 是集成步骤大小，第二个参数是目标。
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Double
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
typeParameters:
- uid: "'T"
  summary: 每次步骤应执行的操作的类型;通常为 `Qubit[]` 或 `Qubit` 。
metadata:
  ms.openlocfilehash: e3febe45478ca86a36844d6af75884872cb12680
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356535"
