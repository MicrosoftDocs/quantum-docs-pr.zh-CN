### YamlMime:QSharpType
uid: microsoft.quantum.preparation.prepareuniformsuperposition
name: PrepareUniformSuperposition
type: operation
namespace: microsoft.quantum.preparation
summary: >-
  创建对 superposition 进行编码的状态为0的统一 `nIndices` 。


  也就是说，在给定输入状态 $ \ket{0\cdots 0} $ 的情况下，此单一 $U $ 将在所有数字状态 $0 $ 到 $M-$1 上创建一个统一的 superposition。 换句话说，$ $ \begin{align} U\ket {0} = \frac {1} {\sqrt{m}}\ sum_ {j = 0} ^ {M-1} \ket{j}。

  \end{align} $ $。
examples: >-
  下面的示例准备 {1} $3 $ qubits 上的状态 $ \frac {\sqrt {6} } \ sum_ {j = 0} ^ {5} \ket{j} $。


  ```Q#

  let nIndices = 6;

  using(indexRegister = Qubit[3]) {
      PrepareUniformSuperposition(nIndices, LittleEndian(indexRegister));
  }

  ```
syntax: 'operation PrepareUniformSuperposition (nIndices : Int, indexRegister : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(nIndices : Int, indexRegister : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: nIndices
    summary: 统一 superposition 中所需的状态数 $M $。
    isPrimitive: true
    uid: Int
  - name: indexRegister
    summary: >-
      以格式存储数字状态的 qubit 寄存器 `LittleEndian` 。

      此注册必须能够将数字存储 $M-$1，并假定在状态 $ \ket{0\cdots 0} $ 中进行初始化。
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 442daa4affb6b59191af9117a8094f7bfbf71302
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89331324"
