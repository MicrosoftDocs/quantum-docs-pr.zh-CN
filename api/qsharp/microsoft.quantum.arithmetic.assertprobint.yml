### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.assertprobint
name: AssertProbInt
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  断言量程寄存器的特定状态的概率具有预期值。


  如果给定 $n $-qubit 量程状态 $ \ket{\psi} = \sum ^ {2 ^ n-1} _ {j = 0} \ alpha_j \ket{j} $，则断言 $ $j 索引的状态 $ \ket{j} $ 的概率 $ | \ alpha_j | ^ 2 $ 具有预期值。
examples: >-
  假设`qubits`注册将 qubit 的量程状态 $ \ket{\psi} = \ sqrt {1/8} \ 票证{0}+ \ sqrt {7/8} \ 票证{6}$ 编码为小 endian 格式。

  这意味着数字{0}状态 $ \ket \equiv\ket{0}\ket{0}\ket{0}$ 和 $ \ket{6}\equiv\ket{0}\ket{1}\ket{1}$。 以下断言成功：


  - `AssertProbInt(0,0.125,qubits,10e-10);`

  - `AssertProbInt(6,0.875,qubits,10e-10);`
syntax: 'operation AssertProbInt (stateIndex : Int, expected : Double, qubits : Microsoft.Quantum.Arithmetic.LittleEndian, tolerance : Double) : Unit'
input:
  content: '(stateIndex : Int, expected : Double, qubits : Microsoft.Quantum.Arithmetic.LittleEndian, tolerance : Double)'
  types:
  - name: stateIndex
    summary: 由`LittleEndian`寄存器表示的状态 $ \ket{j} $ 的索引 $j $。
    isPrimitive: true
    uid: Int
  - name: expected
    summary: $ | \ Alpha_j | ^ 2 $ 的预期值。
    isPrimitive: true
    uid: Double
  - name: qubits
    summary: 以小字节序格式存储 $ \ket{\psi} $ 的 qubit 寄存器。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: tolerance
    summary: 实际值与预期值的绝对容差。
    isPrimitive: true
    uid: Double
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: 247dcb78921bfe5df96c56b74e251d0413cfab3d
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82675257"
