### YamlMime:QSharpType
uid: microsoft.quantum.canon.approximatelyapplydiagonalunitary
name: ApproximatelyApplyDiagonalUnitary
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  将一个复杂阶段数组应用于 qubits 寄存器的数字基础状态，根据给定的公差截断小旋转角度。


  此操作实现在 $n $-qubit number state $ \ket{j} $ 上应用复杂阶段 $e ^ {i \ theta_j} $ 的对角线。

  具体而言，此操作可由单一


  $ $ \begin{align} U = \sum ^ {2 ^ n-1} _ {j = 0} e ^ {i \ theta_j} \ket{j}\bra{j}。

  \end{align} $ $
remarks: 如果指定了小于 $ 2 ^ n $ 的元素，则将用 $ \ theta_j = $0.0 填充 `coefficients`。
syntax: 'operation ApproximatelyApplyDiagonalUnitary (tolerance : Double, coefficients : Double[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
references: '- 量程逻辑电路的合成 Vivek Shende、Stephen Bullock、Igor Markov https://arxiv.org/abs/quant-ph/0406176'
input:
  content: '(tolerance : Double, coefficients : Double[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: tolerance
    summary: 小于其小系数的公差将被截断。
    isPrimitive: true
    uid: Double
  - name: coefficients
    summary: 最多 $ 2 ^ n $ 系数 $ \ theta_j $ 的数组。 $J $ th 用于索引以小字节序格式编码的数字状态 $ \ket{j} $。
    isArray: true
    isPrimitive: true
    uid: Double
  - name: qubits
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- applydiagonalunitary
metadata:
  ms.openlocfilehash: 9d2ee3254a3cd7c182ae6b4a57a6c48a993fa679
  ms.sourcegitcommit: 6ccea4a2006a47569c4e2c2cb37001e132f17476
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 02/28/2020
  ms.locfileid: "77907947"
