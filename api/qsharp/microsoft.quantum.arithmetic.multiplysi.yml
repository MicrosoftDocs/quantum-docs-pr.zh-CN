### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplysi
name: MultiplySI
type: operation
namespace: microsoft.quantum.arithmetic
summary: 将带符号整数与有符号整数相乘 `xs` `ys` 并将结果存储在中 `result` ，后者最初必须为零。
syntax: 'operation MultiplySI (xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian)'
  types:
  - name: xs
    summary: 'n 位被乘数 (SignedLittleEndian) '
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: ys
    summary: 'n 位乘法器 (SignedLittleEndian) '
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: result
    summary: " (SignedLittleEndian) 的2n 位结果必须处于 $ \\ket {0} $ 起初状态。"
    uid: microsoft.quantum.arithmetic.signedlittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: e81995b6dfb20ddd3e3e3139831d3cc43bfd60da
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89353390"
