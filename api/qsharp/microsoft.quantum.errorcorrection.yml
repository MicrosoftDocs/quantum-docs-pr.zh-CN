### YamlMime:QSharpNamespace
functions:
- summary: 返回一个 QECC 值，该值表示⟦3，1，1⟧位翻转代码编码器和解码器，并使用就地症状度量。
  uid: Microsoft.Quantum.ErrorCorrection.BitFlipCode
- summary: 针对⟦3，1，1⟧位翻转代码的表查找，针对给定的症状度量的恢复 Pauli 操作的函数。
  uid: Microsoft.Quantum.ErrorCorrection.BitFlipRecoveryFn
- summary: 返回一个 QECC 值，该值表示⟦5、1、3⟧代码编码器和解码器，并提供就地的症状度量。
  uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCode
- summary: 返回一个函数，该函数通过表查找⟦5，1，3⟧量程代码，将错误症状度量映射到相应的纠错 Pauli 运算符。
  uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCodeRecoveryFn
- summary: 返回一个 CSS 值，它表示⟦7，1，3⟧ Steane 代码编码器，并使用就地的症状度量来表示解码器。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCode
- summary: ⟦7，1，3⟧ Steane 量程代码的稳定 X 和 Z 部分的解码器。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryFns
- summary: ⟦7，1，3⟧ Steane 量程代码的稳定的 X 部分的解码器。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryX
- summary: ⟦7，1，3⟧ Steane 量程代码的 "稳定" 组 Z 部分的解码器。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryZ
- summary: 对于给定的 qubits 寄存器上的 Pauli 操作表，此函数返回一个类型为的对象，该对象 `RecoveryFn` 包含对给定的 Pauli 操作数组执行表查找解码所需的所有信息。
  uid: Microsoft.Quantum.ErrorCorrection.TableLookupRecovery
- summary: ''
  uid: Microsoft.Quantum.ErrorCorrection.TableLookupRecoveryImpl
name: Microsoft.Quantum.ErrorCorrection
newtypes:
- summary: 表示 Calderbank –选定– Steane (CSS) 代码，该代码由其编码器、解码器定义，并分别表示和错误的症状度量过程 `X` `Z` 。
  uid: Microsoft.Quantum.ErrorCorrection.CSS
- summary: >-
    表示一个操作，该操作将编码的寄存器解码为物理寄存器，并使用 qubits 来记录一个症状。

    DecodeOp 的参数与从 EncodeOp 返回的参数相同，反之亦然。
  uid: Microsoft.Quantum.ErrorCorrection.DecodeOp
- summary: >-
    表示一个操作，该操作使用提供的草稿 qubits 将物理寄存器编码为逻辑寄存器。

    第一个参数被视为将进行编码的物理寄存器，而第二个参数被视为将使用的暂存寄存器。
  uid: Microsoft.Quantum.ErrorCorrection.EncodeOp
- summary: 用于注册逻辑 qubits 的物理 qubits 的类型 `Qubit[]` 。
  uid: Microsoft.Quantum.ErrorCorrection.LogicalRegister
- summary: 表示由其编码器、解码器和症状度量过程定义的纠错码。
  uid: Microsoft.Quantum.ErrorCorrection.QECC
- summary: 用于将错误症状映射到一系列可 `Pauli[]` 更正检测到的错误的操作的类型。
  uid: Microsoft.Quantum.ErrorCorrection.RecoveryFn
- summary: '`Result[]`指定量程代码的错误症状的度量结果的类型。'
  uid: Microsoft.Quantum.ErrorCorrection.Syndrome
- summary: 表示一个操作，该操作用于测量纠错代码块的症状。
  uid: Microsoft.Quantum.ErrorCorrection.SyndromeMeasOp
operations:
- summary: >-
    用于实现位翻转编码器和解码器的专用操作。

    请注意，此编码器可以利用就地一致恢复，在这种情况下，它将 "导致" 的初始状态描述的错误 `auxQubits` 。 具体而言，如果 `auxQubits` 最初处于状态 $ \ket {10} $，这将导致在编码的 qubit 上出现 $X _1 $ 错误。
  uid: Microsoft.Quantum.ErrorCorrection.ApplyBitFlipEncoder
- summary: 从 [3，1，3]/⟦3，1，1⟧位翻转代码进行解码。
  uid: Microsoft.Quantum.ErrorCorrection.DecodeFromBitFlipCode
- summary: 对⟦5，1，3⟧量程代码进行解码。
  uid: Microsoft.Quantum.ErrorCorrection.DecodeFromFiveQubitCode
- summary: 一种反向编码操作，它将未编码的量程寄存器映射到⟦7，1，3⟧ Steane 量程代码下的编码的量程寄存器。
  uid: Microsoft.Quantum.ErrorCorrection.DecodeFromSteaneCode
- summary: 编码为 [3，1，3]/⟦3，1，1⟧位翻转代码。
  uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoBitFlipCode
- summary: 编码为⟦5，1，3⟧量程代码。
  uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoFiveQubitCode
- summary: 一种编码操作，用于将未编码的量程寄存器映射到⟦7，1，3⟧ Steane 量程代码下的编码的量程寄存器。
  uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoSteaneCode
- summary: 专用操作，用于实现 5 qubit 编码器和解码器。
  uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCodeEncoderImpl
- summary: 围绕 Y 轴旋转单个 qubit 乘以π/4。
  uid: Microsoft.Quantum.ErrorCorrection.InjectPi4YRotation
- summary: 实现 Knill 幻状态升华算法。
  uid: Microsoft.Quantum.ErrorCorrection.KnillDistill
- summary: 度量稳定组的给定生成器集。
  uid: Microsoft.Quantum.ErrorCorrection.MeasureStabilizerGenerators
- summary: 按类型描述的量程代码执行一轮错误更正 `QECC` 。
  uid: Microsoft.Quantum.ErrorCorrection.Recover
- summary: 按类型描述的量程代码执行一轮错误更正 `CSS` 。
  uid: Microsoft.Quantum.ErrorCorrection.RecoverCSS
- summary: 专用操作，用于实现 Steane 代码编码器和解码器。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeEncoderImpl
- summary: >-
    与嵌入有关的症状。

    不会平等对待 $X $-和 $Z $-stabilizers，这是因为编码线路的特定选择。 这种不对称会导致不同的症状提取例程。 可以通过直接在代码状态上测量多 qubit Pauli 运算符来度量症状，但对于升华目的，逻辑 qubit 将返回到单个 qubit 中，而无需进一步 ancillas。
  uid: Microsoft.Quantum.ErrorCorrection._ExtractLogicalQubitFromSteaneCode
summary: 此命名空间包含用于量程错误更正的函数、操作和用户定义类型。
uid: Microsoft.Quantum.ErrorCorrection
metadata:
  ms.openlocfilehash: ba16a793fc9389c7102047a6664c0338ea11314d
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92695536"
