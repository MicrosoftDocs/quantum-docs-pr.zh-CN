### YamlMime:QSharpNamespace
functions:
- summary: 返回类型的复数的绝对值 `Complex` 。
  uid: Microsoft.Quantum.Math.AbsComplex
- summary: 返回类型的复数的绝对值 `ComplexPolar` 。
  uid: Microsoft.Quantum.Math.AbsComplexPolar
- summary: 返回双精度浮点数字的绝对值。
  uid: Microsoft.Quantum.Math.AbsD
- summary: 返回整数的绝对值。
  uid: Microsoft.Quantum.Math.AbsI
- summary: 返回大整数的绝对值。
  uid: Microsoft.Quantum.Math.AbsL
- summary: 返回类型的复数的平方绝对值 `Complex` 。
  uid: Microsoft.Quantum.Math.AbsSquaredComplex
- summary: 返回类型的复数的平方绝对值 `ComplexPolar` 。
  uid: Microsoft.Quantum.Math.AbsSquaredComplexPolar
- summary: 用于以递归方式计算值的 bitsize 的 Helper 函数。
  uid: Microsoft.Quantum.Math.AccumulatedBitsizeI
- summary: 用于以递归方式计算值的 bitsize 的 Helper 函数。
  uid: Microsoft.Quantum.Math.AccumulatedBitsizeL
- summary: 返回余弦值为指定数字的角度。
  uid: Microsoft.Quantum.Math.ArcCos
- summary: 计算数字的反双曲余弦值。
  uid: Microsoft.Quantum.Math.ArcCosh
- summary: 返回正弦值为指定数字的角度。
  uid: Microsoft.Quantum.Math.ArcSin
- summary: 计算数字的反双曲正弦值。
  uid: Microsoft.Quantum.Math.ArcSinh
- summary: 返回正切值为指定数字的角度。
  uid: Microsoft.Quantum.Math.ArcTan
- summary: 返回正切值为两个指定数字的商的角度。
  uid: Microsoft.Quantum.Math.ArcTan2
- summary: 计算数字的反双曲正切值。
  uid: Microsoft.Quantum.Math.ArcTanh
- summary: 返回类型为的复数的相位 `Complex` 。
  uid: Microsoft.Quantum.Math.ArgComplex
- summary: 返回类型为的复数的相位 `ComplexPolar` 。
  uid: Microsoft.Quantum.Math.ArgComplexPolar
- summary: >-
    对于非负整数 `a` ，返回表示所需的位数 `a` 。

    即，返回 < 2 ^ n $ $a 的最小 $n $。
  uid: Microsoft.Quantum.Math.BitSizeI
- summary: >-
    对于非负整数 `a` ，返回表示所需的位数 `a` 。

    即，返回 < 2 ^ n $ $a 的最小 $n $。
  uid: Microsoft.Quantum.Math.BitSizeL
- summary: 返回大于或等于指定数字的最小整数。
  uid: Microsoft.Quantum.Math.Ceiling
- summary: 将类型的复杂数字转换 `Complex` 为类型的复数 `ComplexPolar` 。
  uid: Microsoft.Quantum.Math.ComplexAsComplexPolar
- summary: 将类型的复杂数字转换 `ComplexPolar` 为类型的复数 `Complex` 。
  uid: Microsoft.Quantum.Math.ComplexPolarAsComplex
- summary: 查找最接近于 `fraction` 分母小于或等于的连续分数收敛性 `denominatorBound`
  uid: Microsoft.Quantum.Math.ContinuedFractionConvergentI
- summary: 查找最接近于 `fraction` 分母小于或等于的连续分数收敛性 `denominatorBound`
  uid: Microsoft.Quantum.Math.ContinuedFractionConvergentL
- summary: 返回指定角度的余弦值。
  uid: Microsoft.Quantum.Math.Cos
- summary: 返回指定角度的双曲余弦值。
  uid: Microsoft.Quantum.Math.Cosh
- summary: 将一个 BigInteger 值除以另一个值，返回结果，并将余数作为元组返回。
  uid: Microsoft.Quantum.Math.DivRemL
- summary: 返回两个输入的商。
  uid: Microsoft.Quantum.Math.DividedByC
- summary: 返回两个输入的商。
  uid: Microsoft.Quantum.Math.DividedByCP
- summary: 返回两个输入的商。
  uid: Microsoft.Quantum.Math.DividedByD
- summary: 返回两个输入的商。
  uid: Microsoft.Quantum.Math.DividedByI
- summary: 返回两个输入的商。
  uid: Microsoft.Quantum.Math.DividedByL
- summary: 返回自然对数底数 $e $。
  uid: Microsoft.Quantum.Math.E
- summary: 返回 $e 按指定次幂。
  uid: Microsoft.Quantum.Math.ExpD
- summary: 返回一个整数，该整数针对给定的模数引发了给定的幂。
  uid: Microsoft.Quantum.Math.ExpModI
- summary: 返回一个整数，该整数针对给定的模数引发了给定的幂。
  uid: Microsoft.Quantum.Math.ExpModL
- summary: 计算元组 $ (u，v) $，以便 $u \cdot a + v \cdot b = \operatorname{GCD} (a，b) $，其中 $ \operatorname{GCD} $ 是 $a $ 最大公因数 $a $ 和 $b $。 GCD 始终为正值。
  uid: Microsoft.Quantum.Math.ExtendedGreatestCommonDivisorI
- summary: 计算元组 $ (u，v) $，以便 $u \cdot a + v \cdot b = \operatorname{GCD} (a，b) $，其中 $ \operatorname{GCD} $ 是 $a $ 最大公因数 $a $ 和 $b $。 GCD 始终为正值。
  uid: Microsoft.Quantum.Math.ExtendedGreatestCommonDivisorL
- summary: 返回小于或等于指定数字的最大整数。
  uid: Microsoft.Quantum.Math.Floor
- summary: 计算 $a $ 和 $b $ 的最大公因数。 GCD 始终为正值。
  uid: Microsoft.Quantum.Math.GreatestCommonDivisorI
- summary: 计算 $a $ 和 $b $ 的最大公因数。 GCD 始终为正值。
  uid: Microsoft.Quantum.Math.GreatestCommonDivisorL
- summary: 返回一指定数字被另一指定数字相除的余数。
  uid: Microsoft.Quantum.Math.IEEERemainder
- summary: 返回 $b $ $a \cdot b = 1 ( \operatorname{mod} \texttt{modulus} ) $。
  uid: Microsoft.Quantum.Math.InverseModI
- summary: 返回 $b $ $a \cdot b = 1 ( \operatorname{mod} \texttt{modulus} ) $。
  uid: Microsoft.Quantum.Math.InverseModL
- summary: 如果 $a $ 和 $b $ 是共同质数，则返回 true; 否则返回 false。
  uid: Microsoft.Quantum.Math.IsCoprimeI
- summary: 如果 $a $ 和 $b $ 是共同质数，则返回 true; 否则返回 false。
  uid: Microsoft.Quantum.Math.IsCoprimeL
- summary: 计算数字的以2为底的对数。
  uid: Microsoft.Quantum.Math.Lg
- summary: 返回指定数字的自然 (底数 $e $) 对数。
  uid: Microsoft.Quantum.Math.Log
- summary: 返回指定数字以 10 为底的对数。
  uid: Microsoft.Quantum.Math.Log10
- summary: 返回2的自然对数。
  uid: Microsoft.Quantum.Math.LogOf2
- summary: 给定整数数组，返回最大元素。
  uid: Microsoft.Quantum.Math.Max
- summary: 返回两个指定数字中较大的一个。
  uid: Microsoft.Quantum.Math.MaxD
- summary: 返回两个指定数字中较大的一个。
  uid: Microsoft.Quantum.Math.MaxI
- summary: 返回两个指定数字中较大的一个。
  uid: Microsoft.Quantum.Math.MaxL
- summary: 给定整数数组，返回最小元素。
  uid: Microsoft.Quantum.Math.Min
- summary: 返回两个指定数字中较小的一个。
  uid: Microsoft.Quantum.Math.MinD
- summary: 返回两个指定数字中较小的一个。
  uid: Microsoft.Quantum.Math.MinI
- summary: 返回两个指定数字中较小的一个。
  uid: Microsoft.Quantum.Math.MinL
- summary: 返回两个输入之间的差。
  uid: Microsoft.Quantum.Math.MinusC
- summary: 返回两个输入之间的差。
  uid: Microsoft.Quantum.Math.MinusCP
- summary: 返回两个输入之间的差。
  uid: Microsoft.Quantum.Math.MinusD
- summary: 返回两个输入之间的差。
  uid: Microsoft.Quantum.Math.MinusI
- summary: 返回两个输入之间的差。
  uid: Microsoft.Quantum.Math.MinusL
- summary: 返回与另一个数字相关的数字的模数。
  uid: Microsoft.Quantum.Math.ModI
- summary: 返回与另一个数字相关的数字的模数。
  uid: Microsoft.Quantum.Math.ModL
- summary: 对某个数字进行模块化除法运算，使另一个数字的幂。
  uid: Microsoft.Quantum.Math.ModPowL
- summary: 计算模的规范 residue `value` `modulus` 。
  uid: Microsoft.Quantum.Math.ModulusI
- summary: 计算模的规范 residue `value` `modulus` 。
  uid: Microsoft.Quantum.Math.ModulusL
- summary: 返回输入的一元求反。
  uid: Microsoft.Quantum.Math.NegationC
- summary: 返回输入的一元求反。
  uid: Microsoft.Quantum.Math.NegationCP
- summary: 返回输入的一元求反。
  uid: Microsoft.Quantum.Math.NegationD
- summary: 返回输入的一元求反。
  uid: Microsoft.Quantum.Math.NegationI
- summary: 返回输入的一元求反。
  uid: Microsoft.Quantum.Math.NegationL
- summary: 表示圆的周长与其直径的比值，由常数 π 指定。
  uid: Microsoft.Quantum.Math.PI
- summary: >-
    返回 `L(p)` 向量的标准 `Double` 。

    也就是说，给定类型的数组 $x $ `Double[]` ，这将返回 $p $-标准 $ \| x \| \_ p = ( \ sum_ {j} | x_j | ^ {p} ) ^ {1/p} $。
  uid: Microsoft.Quantum.Math.PNorm
- summary: >-
    规范化中的向量 `Double` `L(p)` 。

    也就是说，给定类型的数组 $x $ `Double[]` ，这将返回一个数组，其中所有元素均除以 $p $-标准 $ \| x \| _p $。
  uid: Microsoft.Quantum.Math.PNormalized
- summary: 返回两个输入 (串联) 的总和。
  uid: Microsoft.Quantum.Math.PlusA
- summary: 返回两个输入之和。
  uid: Microsoft.Quantum.Math.PlusC
- summary: 返回两个输入之和。
  uid: Microsoft.Quantum.Math.PlusCP
- summary: 返回两个输入之和。
  uid: Microsoft.Quantum.Math.PlusD
- summary: 返回两个输入之和。
  uid: Microsoft.Quantum.Math.PlusI
- summary: 返回两个输入之和。
  uid: Microsoft.Quantum.Math.PlusL
- summary: 返回一个数的指定幂。
  uid: Microsoft.Quantum.Math.PowC
- summary: 内部。 由于最简单的方法是定义笛卡尔形式的两个复数的幂作为极坐标形式返回，因此我们在此定义，然后根据需要进行转换。
  uid: Microsoft.Quantum.Math.PowCAsCP
- summary: 返回一个数的指定幂。
  uid: Microsoft.Quantum.Math.PowCP
- summary: 返回乘幂 y 的数字 x。
  uid: Microsoft.Quantum.Math.PowD
- summary: 返回一个数的指定幂。
  uid: Microsoft.Quantum.Math.PowI
- summary: 返回一个数的指定幂。
  uid: Microsoft.Quantum.Math.PowL
- summary: 计算两个实数之间的模数。
  uid: Microsoft.Quantum.Math.RealMod
- summary: 将值舍入到最接近的整数。
  uid: Microsoft.Quantum.Math.Round
- summary: 返回指示数字符号的整数。
  uid: Microsoft.Quantum.Math.SignD
- summary: 返回指示数字符号的整数。
  uid: Microsoft.Quantum.Math.SignI
- summary: 返回指示数字符号的整数。
  uid: Microsoft.Quantum.Math.SignL
- summary: 返回指定角度的正弦值。
  uid: Microsoft.Quantum.Math.Sin
- summary: 返回指定角度的双曲正弦值。
  uid: Microsoft.Quantum.Math.Sinh
- summary: 返回指定数字的平方根。
  uid: Microsoft.Quantum.Math.Sqrt
- summary: 返回向量的2平方标准。
  uid: Microsoft.Quantum.Math.SquaredNorm
- summary: 返回指定角度的正切值。
  uid: Microsoft.Quantum.Math.Tan
- summary: 返回指定角度的双曲正切值。
  uid: Microsoft.Quantum.Math.Tanh
- summary: 返回两个输入的乘积。
  uid: Microsoft.Quantum.Math.TimesC
- summary: 返回两个输入的乘积。
  uid: Microsoft.Quantum.Math.TimesCP
- summary: 返回两个输入的乘积。
  uid: Microsoft.Quantum.Math.TimesD
- summary: 返回两个输入的乘积。
  uid: Microsoft.Quantum.Math.TimesI
- summary: 返回两个输入的乘积。
  uid: Microsoft.Quantum.Math.TimesL
- summary: 计算一个数字的整数部分。
  uid: Microsoft.Quantum.Math.Truncate
- summary: 使用界限计算 GCD 的内部递归调用
  uid: Microsoft.Quantum.Math._ContinuedFractionConvergentI
- summary: 使用界限计算 GCD 的内部递归调用
  uid: Microsoft.Quantum.Math._ContinuedFractionConvergentL
- summary: 用于计算 GCD 的内部递归调用。
  uid: Microsoft.Quantum.Math._ExtendedGreatestCommonDivisorI
- summary: 用于计算 GCD 的内部递归调用。
  uid: Microsoft.Quantum.Math._ExtendedGreatestCommonDivisorL
name: Microsoft.Quantum.Math
newtypes:
- summary: 表示形式的有理数 `p/q` 。 整数 `p` 是元组的第一个元素， `q` 是元组的第二个元素。
  uid: Microsoft.Quantum.Math.BigFraction
- summary: 表示复数的实部和虚部。 元组的第一个元素是实际的组件，第二个元素是虚部。
  uid: Microsoft.Quantum.Math.Complex
- summary: >-
    表示极坐标形式的复数。

    复数的极坐标表示形式为 $c = r e ^ {i t} $。
  uid: Microsoft.Quantum.Math.ComplexPolar
- summary: 表示形式的有理数 `p/q` 。 整数 `p` 是元组的第一个元素， `q` 是元组的第二个元素。
  uid: Microsoft.Quantum.Math.Fraction
operations:
- summary: >+
    > [!WARNING]

    > RandomInt 已被弃用。 请改用 <xref:Microsoft.Quantum.Random.DrawRandomInt>。

  uid: Microsoft.Quantum.Math.RandomInt
- summary: >+
    > [!WARNING]

    > RandomIntPow2 已被弃用。 请改用 <xref:Microsoft.Quantum.Random.DrawRandomInt>。

  uid: Microsoft.Quantum.Math.RandomIntPow2
- summary: >+
    > [!WARNING]

    > RandomReal 已被弃用。 请改用 <xref:Microsoft.Quantum.Random.DrawRandomDouble>。

  uid: Microsoft.Quantum.Math.RandomReal
- summary: >+
    > [!WARNING]

    > RandomSingleQubitPauli 已被弃用。 请改用 <xref:Microsoft.Quantum.Random.DrawRandomPauli>。

  uid: Microsoft.Quantum.Math.RandomSingleQubitPauli
summary: 此命名空间包含传统数学函数和数据类型。
uid: Microsoft.Quantum.Math
metadata:
  ms.openlocfilehash: 13ccb80ce78e7d9d6341d7b228e39b65026ab090
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92700545"
