### YamlMime:QSharpType
uid: microsoft.quantum.canon.multiplexpauli
name: MultiplexPauli
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  对 qubits 数组应用 Pauli 旋转。


  这会应用一次受控的单一操作，该操作会按角度 $ theta_j \ qubit Pauli operator $P $ （由 $n $-qubit 号 state $ \ket{j} $ 控制）执行旋转。

  特别是，此操作的操作由单一


  $ $ \begin{align} U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j} \otimes e ^ {i P \ theta_j}。

  \end{align}


  ##
remarks: '`coefficients`如果指定少于 $ 2 ^ n $，则将用元素 $ \ theta_j = $0.0 填充。'
syntax: 'operation MultiplexPauli (coefficients : Double[], pauli : Pauli, control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit) : Unit'
input:
  content: '(coefficients : Double[], pauli : Pauli, control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit)'
  types:
  - name: coefficients
    summary: 最多 $ 2 ^ n $ 系数 $ \ theta_j $ 的数组。 $J $ th 用于索引以小字节序格式编码的数字状态 $ \ket{j} $。
    isArray: true
    isPrimitive: true
    uid: Double
  - name: pauli
    summary: Pauli 运算符 $P $，它确定旋转的轴。
    isPrimitive: true
    uid: Pauli
  - name: control
    summary: $n 以小字节序格式编码数字状态 $ \ket{j} $ 的 qubit 控制寄存器。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: target
    summary: 通过 $e ^ {i P \ theta_j} $ 旋转的单个 qubit 寄存器。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- approximatelymultiplexpauli
metadata:
  ms.openlocfilehash: 202a1caec428d83027de127b08f05a8e07a63caa
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82678767"
