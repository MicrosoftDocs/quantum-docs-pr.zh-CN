### YamlMime:QSharpType
uid: microsoft.quantum.canon.embedpauli
name: EmbedPauli
type: function
namespace: microsoft.quantum.canon
summary: 给定 qubit Pauli 运算符和 qubit 的索引后，将返回一个多 qubit Pauli 运算符，该运算符具有给定的单一 qubit 运算符，位于该索引处和 `PauliI` 其他每个索引处。
examples: >-
  获取阵列 `[PauliI, PauliI, PauliX, PauliI]` ：


  ```qsharp

  EmbedPauli(PauliX, 2, 3);

  ```
syntax: 'function EmbedPauli (pauli : Pauli, location : Int, n : Int) : Pauli[]'
input:
  content: '(pauli : Pauli, location : Int, n : Int)'
  types:
  - name: pauli
    summary: 要放在给定位置的 qubit Pauli 运算符。
    isPrimitive: true
    uid: Pauli
  - name: location
    summary: 一个索引 `output[location] == pauli` ，其中， `output` 是此函数的输出。
    isPrimitive: true
    uid: Int
  - name: n
    summary: 要返回的数组的长度。
    isPrimitive: true
    uid: Int
output:
  content: Pauli[]
  types:
  - isArray: true
    isPrimitive: true
    uid: Pauli
metadata:
  ms.openlocfilehash: a5a6dbabfe51f52da9eb63d23bfbf1cf7ee03370
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356365"
