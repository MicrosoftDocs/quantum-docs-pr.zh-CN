### YamlMime:QSharpType
uid: microsoft.quantum.optimization.localunivariateminimum
name: LocalUnivariateMinimum
type: function
namespace: microsoft.quantum.optimization
summary: 使用黄金间隔搜索，返回单变量函数在限定间隔内的本地最小值。
syntax: 'function LocalUnivariateMinimum (fn : (Double -> Double), bounds : (Double, Double), tolerance : Double) : Microsoft.Quantum.Optimization.UnivariateOptimizationResult'
input:
  content: '(fn : (Double -> Double), bounds : (Double, Double), tolerance : Double)'
  types:
  - name: fn
    summary: 要最小化的单变量函数。
    isFunction: true
    input:
      types:
      - isPrimitive: true
        uid: Double
    output:
      types:
      - isPrimitive: true
        uid: Double
  - name: bounds
    summary: 要在其中找到本地最小值的时间间隔。
    types:
    - isPrimitive: true
      uid: Double
    - isPrimitive: true
      uid: Double
  - name: tolerance
    summary: >-
      函数输入中的准确性是可接受的。

      搜索本地 optima 将继续执行，直到该间隔的宽度比此公差更小。
    isPrimitive: true
    uid: Double
output:
  content: Microsoft.Quantum.Optimization.UnivariateOptimizationResult
  types:
  - summary: 给定函数的本地 optima，位于给定边界内。
    uid: microsoft.quantum.optimization.univariateoptimizationresult
metadata:
  ms.openlocfilehash: 1cb3588d3761b2eab1c8c14b7c6fcebdc077662a
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91491578"
