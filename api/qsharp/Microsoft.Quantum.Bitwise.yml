### YamlMime:QSharpNamespace
uid: microsoft.quantum.bitwise
name: Microsoft.Quantum.Bitwise
functions:
- uid: microsoft.quantum.bitwise.and
  summary: >-
    返回两个整数的按位 "与"。

    这会执行与内置运算符相同的计算 `&&&` 。
- uid: microsoft.quantum.bitwise.leftshiftedi
  summary: 将数字的按位表示形式向左移动给定的位数。
- uid: microsoft.quantum.bitwise.leftshiftedl
  summary: 将数字的按位表示形式向左移动给定的位数。
- uid: microsoft.quantum.bitwise.not
  summary: >-
    返回整数的按位 "非"。

    这会执行与内置运算符相同的计算 `~~~` 。
- uid: microsoft.quantum.bitwise.or
  summary: >-
    返回两个整数的按位 "或"。

    这会执行与内置运算符相同的计算 `|||` 。
- uid: microsoft.quantum.bitwise.parity
  summary: 如果整数的二进制表示形式包含奇数个值，则返回 (1 的整数的按位奇偶校验，否则) 。
- uid: microsoft.quantum.bitwise.rightshiftedi
  summary: 将数字的按位表示形式向右移位给定的位数。
- uid: microsoft.quantum.bitwise.rightshiftedl
  summary: 将数字的按位表示形式向右移位给定的位数。
- uid: microsoft.quantum.bitwise.xbits
  summary: 返回一个整数，该整数表示 Pauli 运算符数组的 X 位。
- uid: microsoft.quantum.bitwise.xor
  summary: >-
    返回两个整数的按位异或 (XOR) 。

    这会执行与内置运算符相同的计算 `^^^` 。
- uid: microsoft.quantum.bitwise.zbits
  summary: 返回一个整数，该整数表示 Pauli 运算符数组的 Z 位。
summary: " # <a name=\"summary\"></a>总结\n 此命名空间包含用于对传统数据类型的按位表示形式进行操作的函数。"
metadata:
  ms.openlocfilehash: 02fa75fd66a8f6dfeda42bc7e9e8832b34ecba40
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89341575"
