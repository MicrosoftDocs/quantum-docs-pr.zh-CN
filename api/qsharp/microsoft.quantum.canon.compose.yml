### YamlMime:QSharpType
uid: microsoft.quantum.canon.compose
name: Compose
type: function
namespace: Microsoft.Quantum.Canon
summary: >-
  返回两个函数的组合。


  如果 $g $ $f 两个函数，则返回一个表示 $f \circ g $ 的新函数。
syntax: "function Compose (outer : ('U -> 'V), inner : ('T -> 'U)) : ('T -> 'V)"
input:
  content: "(outer : ('U -> 'V), inner : ('T -> 'U))"
  types:
  - name: outer
    summary: 要应用的第二个函数。
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'V"
        isLocal: true
  - name: inner
    summary: 要应用的第一个函数。
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'U"
        isLocal: true
output:
  content: ('T -> 'V)
  types:
  - summary: 新函数 $h $，以便所有输入 $x $，$f （g （x）） = h （x） $。
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'V"
        isLocal: true
typeParameters:
- uid: "'T"
  summary: 要应用的第一个函数的输入类型。
- uid: "'U"
  summary: 要应用的第一个函数的输出类型以及要应用的第二个函数的输入类型。
- uid: "'V"
  summary: 要应用的第二个函数的输出类型。
metadata:
  ms.openlocfilehash: 44296db92d6261fc8aba843346700bf8e22663bb
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76871543"
