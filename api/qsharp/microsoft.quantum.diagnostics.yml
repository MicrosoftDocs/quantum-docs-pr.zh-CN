### YamlMime:QSharpNamespace
functions:
- summary: 断言布尔值的两个数组相等。
  uid: Microsoft.Quantum.Diagnostics.AllEqualityFactB
- summary: 断言整数值的两个数组相等。
  uid: Microsoft.Quantum.Diagnostics.AllEqualityFactI
- summary: 声明传统条件为 false。
  uid: Microsoft.Quantum.Diagnostics.Contradiction
- summary: 转储当前目标计算机的状态。
  uid: Microsoft.Quantum.Diagnostics.DumpMachine
- summary: 将当前目标计算机的状态转储为与给定的 qubits 相关联。
  uid: Microsoft.Quantum.Diagnostics.DumpRegister
- summary: 断言传统 Bool 变量具有预期值。
  uid: Microsoft.Quantum.Diagnostics.EqualityFactB
- summary: 断言复数具有预期值。
  uid: Microsoft.Quantum.Diagnostics.EqualityFactC
- summary: 断言复数具有预期值。
  uid: Microsoft.Quantum.Diagnostics.EqualityFactCP
- summary: 断言传统 Int 变量具有预期值。
  uid: Microsoft.Quantum.Diagnostics.EqualityFactI
- summary: 断言传统 BigInt 变量具有预期值。
  uid: Microsoft.Quantum.Diagnostics.EqualityFactL
- summary: 断言传统结果变量具有预期值。
  uid: Microsoft.Quantum.Diagnostics.EqualityFactR
- summary: 表示某一传统浮点值具有到给定绝对公差的预期值。
  uid: Microsoft.Quantum.Diagnostics.EqualityWithinToleranceFact
- summary: 声明传统条件为 true。
  uid: Microsoft.Quantum.Diagnostics.Fact
- summary: 用于在出现有意义的错误消息时失败的内部函数。
  uid: Microsoft.Quantum.Diagnostics.FormattedFailure
- summary: 断言传统复数的预期值为小公差 1e-10。
  uid: Microsoft.Quantum.Diagnostics.NearEqualityFactC
- summary: 断言传统复数的预期值为小公差 1e-10。
  uid: Microsoft.Quantum.Diagnostics.NearEqualityFactCP
- summary: 断言传统浮点值的预期值为小公差 1e-10。
  uid: Microsoft.Quantum.Diagnostics.NearEqualityFactD
name: Microsoft.Quantum.Diagnostics
newtypes:
- summary: 编译器可识别的属性，通过该属性可以定义可在加载类型时使用的可选名称，也可以将其用于测试目的。
  uid: Microsoft.Quantum.Diagnostics.EnableTestingViaName
- summary: 编译器可识别的属性，用于标记单元测试。
  uid: Microsoft.Quantum.Diagnostics.Test
operations:
- summary: 在对此操作及其 adjoint 的调用之间，断言给定的操作最多可调用特定次数。
  uid: Microsoft.Quantum.Diagnostics.AllowAtMostNCallsCA
- summary: 在对此操作及其 adjoint 的调用之间，将使用语句最多地断言给定数量的附加 qubits。
  uid: Microsoft.Quantum.Diagnostics.AllowAtMostNQubits
- summary: 断言给定的 qubits 都处于 $ \ket {0} $ 状态。
  uid: Microsoft.Quantum.Diagnostics.AssertAllZero
- summary: 断言给定的 qubits 都处于 $ \ket {0} $ 状态，直到达到给定的容差。
  uid: Microsoft.Quantum.Diagnostics.AssertAllZeroWithinTolerance
- summary: 度量给定 Pauli 基础中给定 qubits 的断言将始终具有给定的结果。
  uid: Microsoft.Quantum.Diagnostics.AssertMeasurement
- summary: 在给定 Pauli 基础上测量给定 qubits 的断言在某种程度上具有给定概率的给定结果。
  uid: Microsoft.Quantum.Diagnostics.AssertMeasurementProbability
- summary: >-
    假设有两个运算，则断言它们对于所有输入状态都是相同的。

    此断言是通过以下方式实现的：检查所有状态的操作的操作： $V _0 \otimes ... \otimes V_ {n-1} $，其中 $V _k $ 是状态 $ \ket {0} $，$ \ket $ {1} ，$ \ket{+} $，$ \ket{i} $ (+ 1 Eigenstate Of Pauli Y operator) 。

    此断言使用 $n $ qubits，需要对要比较的操作进行多次调用。
  uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualInPlace
- summary: '`givenU` `expectedU` 通过从计算基础上检查矢量上操作的操作，检查操作是否等于给定输入大小的操作。 这对于两个 unitaries 的相等性是必需的，但并不足够。'
  uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualInPlaceCompBasis
- summary: >-
    假设有两个运算，则断言它们对于所有输入状态都是相同的。

    通过使用 Choi – Jamiołkowski isomorphism 将断言降低到两个放大寄存器上的某个 qubit 状态断言，实现此断言。 因此，此操作只需对正在测试的每个操作进行一次调用，而需要分配两个要分配的 qubits。 例如，可以使用这种断言来确保操作的优化版本与其简单的实现完全相同，或者对非量程输入进行操作的操作与已知情况有关。
  uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualReferenced
- summary: 断言 superposition 状态相同的阶段具有预期值。
  uid: Microsoft.Quantum.Diagnostics.AssertPhase
- summary: 断言 qubit `q` 位于 Pauli Z 运算符所需的 eigenstate 中。
  uid: Microsoft.Quantum.Diagnostics.AssertQubit
- summary: >-
    断言处于预期状态的 qubit。

    `expected` 表示复杂向量，$ \ket{\psi} = \begin{bmatrix}a & b\end {bmatrix} ^ {\mathrm{T}} $。 元组的第一个元素表示每个 $a $，$b $ 是复数的实部，第二个元素是复数的实部。 最后一个参数定义进行断言的公差。
  uid: Microsoft.Quantum.Diagnostics.AssertQubitIsInStateWithinTolerance
- summary: 断言 qubit `q` 位于 Pauli Z 运算符的预期 eigenstate 中，直到达到给定的容差。
  uid: Microsoft.Quantum.Diagnostics.AssertQubitWithinTolerance
- summary: 在给定操作的情况下，显示有关当前执行目标可用的操作的诊断。
  uid: Microsoft.Quantum.Diagnostics.DumpOperation
- summary: 使用 DumpRegister 提供对引用和目标寄存器状态的诊断。 编写为单独的操作，以允许重写和解释为单独的寄存器，而不是作为单个合并寄存器。
  uid: Microsoft.Quantum.Diagnostics.DumpReferenceAndTarget
- summary: 检查应用两个操作的结果 `givenU` 和 `expectedU` 基础状态是否相同。 基础状态由 `basis` 参数描述。 <xref:microsoft.quantum.extensions.fliptobasis>有关此说明的详细信息，请参阅函数。
  uid: Microsoft.Quantum.Diagnostics._assertEqualOnBasisVector
- summary: >-
    应用 unitaries，它将 $ \ket {0} \otimes\cdots\ket {0} $ 映射到 $ \ket{\ psi_0} \otimes \ket{\ psi_ {n-1}} $，其中 $ \ket{\ psi_k} $ 依赖于 `basis[k]` 。

    `basis[k]`和 $ \ket{\ psi_k} $ 的值之间的对应关系如下：

    - `basis[k]=0` $ \rightarrow \ket {0} $。 - `basis[k]=1` $ \rightarrow \ket {1} $。 - `basis[k]=2` $ \rightarrow \ket{+} $。 - `basis[k]=3` $ \rightarrow \ket{i} $ ( + 1 eigenstate of Pauli Y ) 。
  uid: Microsoft.Quantum.Diagnostics._flipToBasis
- summary: '通过笛卡尔积 [0，界限 [0]-1] × [0，界限 [1]-1] × [0，界限 [Length (界限) -1]-1] 来循环访问变量，并为笛卡尔积的每个元素调用 op (arr) '
  uid: Microsoft.Quantum.Diagnostics._iterateThroughCartesianPower
- summary: >-
    给定两个寄存器，在各自寄存器上的每对 qubits 之间准备最大化放大状态。 所有 qubits 必须以 | 0 ⟩状态启动。

    结果是，每个寄存器中的相应 qubits 对都处于 $ \bra{\ beta_ {00} } \ket{\ beta_ {00} } $ 中。
  uid: Microsoft.Quantum.Diagnostics._prepareEntangledState
summary: ''
uid: Microsoft.Quantum.Diagnostics
metadata:
  ms.openlocfilehash: d39cd1cac6121bd411fc0c87024254599bbb0641
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92695635"
