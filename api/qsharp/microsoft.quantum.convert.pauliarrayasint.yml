### YamlMime:QSharpType
uid: microsoft.quantum.convert.pauliarrayasint
name: PauliArrayAsInt
type: function
namespace: microsoft.quantum.convert
summary: 将表示为一个 qubit Pauli 运算符数组的多 qubit Pauli 运算符编码为一个整数。
remarks: >-
  每个 Pauli 运算符都可以使用两个位进行编码： $ $ \begin{align} \boldone \mapsto 00，\quad X \mapsto 01，\quad Y \mapsto 11，\quad Z \mapsto 10。

  \end{align} $ $


  给定一个 Pauli 运算符数组 `[P0, ..., Pn]` ，该函数将返回一个整数，该整数通过以大字节序顺序连接每个 Pauli 运算符的映射来形成二进制展开 `bits(Pn) ... bits(P0)` 。
syntax: 'function PauliArrayAsInt (paulis : Pauli[]) : Int'
input:
  content: '(paulis : Pauli[])'
  types:
  - name: paulis
    summary: 最多31个 qubit Pauli 运算符的数组。
    isArray: true
    isPrimitive: true
    uid: Pauli
output:
  content: Int
  types:
  - summary: 唯一标识的整数 `paulis` ，如下所述。
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: e0ec584f77489d019a501ff31074e730152218f7
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89338284"
