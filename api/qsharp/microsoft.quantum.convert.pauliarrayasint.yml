### YamlMime:QSharpType
uid: microsoft.quantum.convert.pauliarrayasint
name: PauliArrayAsInt
type: function
namespace: Microsoft.Quantum.Convert
summary: 将表示为一个 qubit Pauli 运算符数组的多 qubit Pauli 运算符编码为一个整数。
remarks: >-
  每个 Pauli 运算符都可以使用两个位进行编码： $ $ \begin{align} \boldone \mapsto 00，\quad X \mapsto 01，\quad Y \mapsto 11，\quad Z \mapsto 10。

  \end{align} $ $


  给定一个 Pauli 运算符`[P0, ..., Pn]`数组，该函数将返回一个整数，该整数通过以大字节序顺序`bits(Pn) ... bits(P0)`连接每个 Pauli 运算符的映射来形成二进制展开。
syntax: 'function PauliArrayAsInt (paulis : Pauli[]) : Int'
input:
  content: '(paulis : Pauli[])'
  types:
  - name: paulis
    summary: 最多31个 qubit Pauli 运算符的数组。
    isArray: true
    isPrimitive: true
    uid: Pauli
output:
  content: Int
  types:
  - summary: 唯一标识`paulis`的整数，如下所述。
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 170218ccf1ec4ee1183a7a69ff1e0969f595cac4
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82677392"
