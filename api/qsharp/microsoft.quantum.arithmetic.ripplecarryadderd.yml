### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.ripplecarryadderd
name: RippleCarryAdderD
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  可逆的就地波纹-包含两个整数。

  给定两个 $n 在 LittleEndian 中编码的 $ 位整数 `xs` 和 `ys`，而 qubit 包含，则操作将计算两个整数的总和，$n 其中，结果的最小有效位保留在 `ys` 中，而执行 xored 到qubit `carry`。
remarks: 指定的受控操作利用操作的对称和相互取消来改善将控件添加到每个操作的默认实现。
syntax: 'operation RippleCarryAdderD (xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, carry : Qubit) : Unit'
references: >-
  - Thomas Draper： "在量程计算机上添加"，2000。
    https://arxiv.org/abs/quant-ph/0008033
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, carry : Qubit)'
  types:
  - name: xs
    summary: LittleEndian qubit register 第一个整数被加数编码。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: ys
    summary: LittleEndian qubit register 编码为第二个整数被加数，将进行修改以容纳总和的 $n $ 最高有效位。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: carry
    summary: 携带 qubit，是 xored，其最高有效位是 sum。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: ef8f5ec89d0a1bf32e401385f21a6dcf1ec24db7
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73214565"
