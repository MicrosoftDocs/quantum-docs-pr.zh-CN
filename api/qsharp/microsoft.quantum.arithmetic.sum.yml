### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.sum
name: Sum
type: operation
namespace: microsoft.quantum.arithmetic
summary: 实现可逆的 sum 入口。 给定一个以 qubit 编码的传入位 `carryIn` ，以及在和中编码的两个被加数位 `summand1` `summand2` ，计算的和的按位 xor `carryIn` `summand1` `summand2` `summand2` 。
remarks: 与 `Carry` 操作相反，此操作不会计算出执行位。
syntax: 'operation Sum (carryIn : Qubit, summand1 : Qubit, summand2 : Qubit) : Unit'
input:
  content: '(carryIn : Qubit, summand1 : Qubit, summand2 : Qubit)'
  types:
  - name: carryIn
    summary: 传入的 qubit。
    isPrimitive: true
    uid: Qubit
  - name: summand1
    summary: 第一个被加数 qubit。
    isPrimitive: true
    uid: Qubit
  - name: summand2
    summary: 第二个被加数 qubit 被替换为与和之和的下 `summand1` 位 `summand2` 。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: e306a78a75978e38b66aebf237fb7e86e965e54d
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91475972"
