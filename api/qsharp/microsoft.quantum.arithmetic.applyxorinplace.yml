### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.applyxorinplace
name: ApplyXorInPlace
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  在传统整数和由 qubits 的寄存器表示的整数之间应用按位 "异或" 运算。


  将 `X` 操作应用到基于整数中的1位的小 endian 寄存器中的 qubits。


  让我们表示， `value` 并使 y 成为编码的无符号整数 `target` ，然后 `InPlaceXorLE` 执行以下映射指定的操作： $ \ket{y}\rightarrow \ket{y\oplus a} $，其中 $ \oplus $ 为按位 "异或" 运算符。
syntax: 'operation ApplyXorInPlace (value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: value
    summary: 一个整数，其假定为非负数。
    isPrimitive: true
    uid: Int
  - name: target
    summary: 用于存储 `value` 小字节序编码的量程寄存器。
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 40eb358b0687f289eb5c97977e1b7a83e3bb74ef
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91463172"
