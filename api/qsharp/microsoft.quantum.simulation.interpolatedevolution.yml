### YamlMime:QSharpType
uid: microsoft.quantum.simulation.interpolatedevolution
name: InterpolatedEvolution
type: function
namespace: microsoft.quantum.simulation
summary: 使用统一的计划在两个生成器之间进行内插，返回一个操作，该操作在生成的时间依赖生成器下将模拟进化应用于 qubit 寄存器。
remarks: 如果选择了内插时间以满足 adiabatic 条件，则此函数将返回一个操作，该操作将为最后一个 dynamical 生成器执行 adiabatic 状态准备。
syntax: 'function InterpolatedEvolution (inerpolationTime : Double, evolutionGeneratorStart : Microsoft.Quantum.Simulation.EvolutionGenerator, evolutionGeneratorEnd : Microsoft.Quantum.Simulation.EvolutionGenerator, timeDependentSimulationAlgorithm : Microsoft.Quantum.Simulation.TimeDependentSimulationAlgorithm) : (Qubit[] => Unit is Adj + Ctl)'
input:
  content: '(inerpolationTime : Double, evolutionGeneratorStart : Microsoft.Quantum.Simulation.EvolutionGenerator, evolutionGeneratorEnd : Microsoft.Quantum.Simulation.EvolutionGenerator, timeDependentSimulationAlgorithm : Microsoft.Quantum.Simulation.TimeDependentSimulationAlgorithm)'
  types:
  - name: inerpolationTime
    isPrimitive: true
    uid: Double
  - name: evolutionGeneratorStart
    summary: 用于模拟进化的初始生成器。
    uid: microsoft.quantum.simulation.evolutiongenerator
  - name: evolutionGeneratorEnd
    summary: 用于模拟进化的最终生成器。
    uid: microsoft.quantum.simulation.evolutiongenerator
  - name: timeDependentSimulationAlgorithm
    summary: 一种依赖于时间的模拟算法，用于模拟统一内插计划期间的演变。
    uid: microsoft.quantum.simulation.timedependentsimulationalgorithm
output:
  content: (Qubit[] => Unit is Adj + Ctl)
  types:
  - isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: 5cd3a4a81ea6c495b04464d3ebde3626b837aade
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89329913"
