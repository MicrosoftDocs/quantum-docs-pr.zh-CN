### YamlMime:QSharpType
uid: microsoft.quantum.preparation.preparequbit
name: PrepareQubit
type: operation
namespace: microsoft.quantum.preparation
summary: >-
  准备 + 1 (`Zero` 给定 Pauli 运算符) eigenstate 中的 qubit。

  如果给定标识运算符，则 qubit 在最大化混合状态下准备就绪。


  如果 qubit 最初处于 $ \ket {0} $ 状态，则此操作将在给定 Pauli 运算符的 $ + $1 eigenstate 中准备 qubit，或者，对于 `PauliI` 最大化 mixed 状态下的 (参阅 <xref:microsoft.quantum.preparation.preparesinglequbitidentity>) 。


  如果 qubit 的状态不是 $ \ket {0} $，此操作将应用以下入口： $H $ for、 `PauliX` $HS $ for `PauliY` 、$I $ for `PauliZ` 和 <xref:microsoft.quantum.preparation.preparesinglequbitidentity> `PauliI` 。
syntax: 'operation PrepareQubit (basis : Pauli, qubit : Qubit) : Unit'
input:
  content: '(basis : Pauli, qubit : Qubit)'
  types:
  - name: basis
    summary: Pauli 运算符 $P $。
    isPrimitive: true
    uid: Pauli
  - name: qubit
    summary: 要准备的 qubit。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: 6cfbd44b4e7d89bce6b95517f5e9cf8ec9384c6f
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91485509"
