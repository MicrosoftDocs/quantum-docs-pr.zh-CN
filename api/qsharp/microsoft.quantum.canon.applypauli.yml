### YamlMime:QSharpType
uid: microsoft.quantum.canon.applypauli
name: ApplyPauli
type: operation
namespace: Microsoft.Quantum.Canon
summary: 给定多 qubit Pauli 运算符，将相应的操作应用于寄存器。
examples: >-
  以下项是等效的：


  ```qsharp

  ApplyPauli([PauliY, PauliZ, PauliX], target);

  ```


  and


  ```qsharp

  Y(target[0]);

  Z(target[1]);

  X(target[2]);

  ```
syntax: 'operation ApplyPauli (pauli : Pauli[], target : Qubit[]) : Unit'
input:
  content: '(pauli : Pauli[], target : Qubit[])'
  types:
  - name: pauli
    summary: 多 qubit Pauli 运算符，表示为单个 qubit Pauli 运算符的数组。
    isArray: true
    isPrimitive: true
    uid: Pauli
  - name: target
    summary: 注册以在上应用给定的 Pauli 操作。
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 9ea6fb02080e72aadc55111bb71f7031fd852212
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82672467"
