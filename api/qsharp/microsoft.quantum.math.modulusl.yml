### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusl
name: ModulusL
type: function
namespace: microsoft.quantum.math
summary: 计算模的规范 residue `value` `modulus` 。
remarks: '此函数的行为方式与运算符 `%` 在 c # 和 Q # 中的行为方式相同，因为结果中始终是一个介于0到之间的正整数 `modulus - 1` ，即使值为负。'
syntax: 'function ModulusL (value : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(value : BigInt, modulus : BigInt)'
  types:
  - name: value
    summary: 计算 residue 的值
    isPrimitive: true
    uid: BigInt
  - name: modulus
    summary: Residues 所采用的模数必须为正数
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - summary: 0之间的整数 $r $， `modulus - 1` 这可 `value - r` 被模数整除
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: 4f99741fcb65081a1ddeba96737a95b2fd1a40a1
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91477995"
