### YamlMime:QSharpType
uid: microsoft.quantum.canon.ccontrolledca
name: CControlledCA
type: function
namespace: microsoft.quantum.canon
summary: >-
  给定操作 op，返回一个新操作，该操作将应用操作（如果古典控制位为 true）。 如果为，则不 `false` 执行任何操作。

  修饰符 `CA` 指示该操作是可控制的且 adjointable。
syntax: "function CControlledCA (op : ('T => Unit is Ctl + Adj)) : ((Bool, 'T) => Unit is Ctl + Adj)"
input:
  content: "(op : ('T => Unit is Ctl + Adj))"
  types:
  - name: op
    summary: 要有条件地应用的操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: ((Bool, 'T) => Unit is Ctl + Adj)
  types:
  - summary: 如果经典控制位为 true，则为 op 的新操作。
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Bool
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
typeParameters:
- uid: "'T"
  summary: 要有条件地应用的操作的输入类型。
seeAlso:
- microsoft.quantum.canon.ccontrolled
metadata:
  ms.openlocfilehash: 8f081115dc7b6223f9fe5d83e5aa02af291cfb4a
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91471994"
