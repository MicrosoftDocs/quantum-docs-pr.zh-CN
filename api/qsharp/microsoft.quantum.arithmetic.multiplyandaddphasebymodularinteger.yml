### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplyandaddphasebymodularinteger
name: MultiplyAndAddPhaseByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: 与 MultiplyAndAddByModularInteger 相同，但假定被加数将整数编码为 QFT。
remarks: >-
  `phaseSummand`假定将最高位设置为0。

  还假定的值`phaseSummand`小于 $N $。
syntax: 'operation MultiplyAndAddPhaseByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: 取模 $N $，将对执行加法和乘法运算。
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: 一个量程寄存器，表示其值要添加到的每个基本状态标签的`summand`无符号整数。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: phaseSummand
    summary: 一个量程寄存器，表示要用作此操作的目标的无符号整数。
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.multiplyandaddbymodularinteger
metadata:
  ms.openlocfilehash: 029ff8fb767ae018b7462f19a5fe09e83e606c6e
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82672807"
