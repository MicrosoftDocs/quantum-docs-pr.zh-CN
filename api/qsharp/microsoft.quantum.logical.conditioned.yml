### YamlMime:QSharpType
uid: microsoft.quantum.logical.conditioned
name: Conditioned
type: function
namespace: microsoft.quantum.logical
summary: 根据布尔条件的值返回两个值中的一个值。
remarks: >-
  与 `?|` 运算符不同，此函数不会进行短路，因此，这两个输入都是完全计算的。


  最多短路行为，如下所示：


  ```Q#

  let x = condition ? ifTrue | ifFalse;

  let x = Conditioned(condition, ifTrue, ifFalse);

  ```
syntax: "function Conditioned (condition : Bool, ifTrue : 'T, ifFalse : 'T) : 'T"
input:
  content: "(condition : Bool, ifTrue : 'T, ifFalse : 'T)"
  types:
  - name: condition
    summary: 用于控制返回的输入的条件。
    isPrimitive: true
    uid: Bool
  - name: ifTrue
    summary: 当为时要返回的 `condition` 值 `true` 。
    uid: "'T"
    isLocal: true
  - name: ifFalse
    summary: 当为时要返回的 `condition` 值 `false` 。
    uid: "'T"
    isLocal: true
output:
  content: "'T"
  types:
  - summary: '`ifTrue` 如果 `condition` 为，则为; `true` `ifFalse` 否则为。'
    uid: "'T"
    isLocal: true
metadata:
  ms.openlocfilehash: a3e80d6d09131c8552b2f5755a53c04d9f9408ee
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91487498"
