### YamlMime:QSharpType
uid: microsoft.quantum.logical.conditioned
name: Conditioned
type: function
namespace: Microsoft.Quantum.Logical
summary: 根据布尔条件的值返回两个值中的一个值。
remarks: >-
  与 `?|` 运算符不同，此函数不会短路，因此这两个输入都是完全计算的。


  最多短路行为，如下所示：


  ```Q#

  let x = condition ? ifTrue | ifFalse;

  let x = Conditioned(condition, ifTrue, ifFalse);

  ```
syntax: "function Conditioned (condition : Bool, ifTrue : 'T, ifFalse : 'T) : 'T"
input:
  content: "(condition : Bool, ifTrue : 'T, ifFalse : 'T)"
  types:
  - name: condition
    summary: 用于控制返回的输入的条件。
    isPrimitive: true
    uid: Bool
  - name: ifTrue
    summary: '`true``condition` 时要返回的值。'
    uid: "'T"
    isLocal: true
  - name: ifFalse
    summary: '`false``condition` 时要返回的值。'
    uid: "'T"
    isLocal: true
output:
  content: "'T"
  types:
  - summary: '`ifTrue` 如果 `condition` `true``ifFalse`，则为; 否则为。'
    uid: "'T"
    isLocal: true
metadata:
  ms.openlocfilehash: f26e540b181ce405125dbf80cd97c3e177ad9531
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73233333"
