### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.amplitudeamplificationfrompartialreflections
name: AmplitudeAmplificationFromPartialReflections
type: function
namespace: microsoft.quantum.amplitudeamplification
summary: 通过部分反射放大幅度。
remarks: >-
  振幅放大是一种特殊的在意波幅放大，其中没有系统 qubits，而在意 oracle 设置为 identity。

  在大多数情况下， `startQubits` 在状态 $ \ket{\text{start}} $1 中初始化， \_ 后者是的 $-$1 eigenstate `startStateReflection` 。
syntax: 'function AmplitudeAmplificationFromPartialReflections (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle) : (Qubit[] => Unit is Adj + Ctl)'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle)'
  types:
  - name: phases
    summary: 部分反射的阶段
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateReflection
    summary: 关于开始状态的反射运算符
    uid: microsoft.quantum.oracles.reflectionoracle
  - name: targetStateReflection
    summary: 有关目标状态的反射运算符
    uid: microsoft.quantum.oracles.reflectionoracle
output:
  content: (Qubit[] => Unit is Adj + Ctl)
  types:
  - summary: 通过部分反射实现波幅放大的操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: a0ee80fdc187154986db9d7621ce5a1d448b4111
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89339637"
