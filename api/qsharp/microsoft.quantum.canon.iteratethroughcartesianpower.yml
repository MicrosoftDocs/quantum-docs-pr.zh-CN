### YamlMime:QSharpType
uid: microsoft.quantum.canon.iteratethroughcartesianpower
name: IterateThroughCartesianPower
type: operation
namespace: microsoft.quantum.canon
summary: >-
  以整数范围的笛卡尔幂对每个索引应用操作。


  以迭代方式为范围的笛卡尔幂的每个元素应用操作 `0..(bound - 1)` 。
examples: >-
  给定一个操作 `op` ，以下两个代码段是等效的：


  ```Q#

  IterateThroughCartesianPower(2, 3, op);

  ```


  ```Q#

  op([0, 0]);

  op([1, 0]);

  op([2, 0]);

  op([0, 1]);

  // ..

  op([2, 2]);

  ```
syntax: 'operation IterateThroughCartesianPower (power : Int, bound : Int, op : (Int[] => Unit)) : Unit'
input:
  content: '(power : Int, bound : Int, op : (Int[] => Unit))'
  types:
  - name: power
    summary: 应为范围增加的笛卡尔幂 `0..(bound - 1)` 。
    isPrimitive: true
    uid: Int
  - name: bound
    summary: 要循环访问的范围的规范，给定为范围的长度。
    isPrimitive: true
    uid: Int
  - name: op
    summary: 为给定笛卡尔幂的每个元素调用的操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Int
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- microsoft.quantum.canon.iteratethroughcartesianproduct
metadata:
  ms.openlocfilehash: ed106ae6d6b84b2b00644709751e57153aec91fb
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356161"
