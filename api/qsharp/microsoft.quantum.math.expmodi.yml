### YamlMime:QSharpType
uid: microsoft.quantum.math.expmodi
name: ExpModI
type: function
namespace: microsoft.quantum.math
summary: >-
  返回一个整数，该整数针对给定的模数引发了给定的幂。


  让我们通过 $N $ $p $ 和模数来表示 $x expBase。

  该函数返回 $x ^ p \operatorname{mod} N $。


  假定 $N $，$x $ 为正，且 power 为非负数。
remarks: 与中的位数成正比，而 `power` 不是 `power` 本身。
syntax: 'function ExpModI (expBase : Int, power : Int, modulus : Int) : Int'
input:
  content: '(expBase : Int, power : Int, modulus : Int)'
  types:
  - name: expBase
    isPrimitive: true
    uid: Int
  - name: power
    isPrimitive: true
    uid: Int
  - name: modulus
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 2747daab5c9ce0d7d274687f56485a1e1d237849
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91490949"
