### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation
name: ObliviousAmplitudeAmplificationFromStatePreparation
type: function
namespace: Microsoft.Quantum.AmplitudeAmplification
summary: 用于部分反射的在意波幅按 oracles 放大。
remarks: >-
  这会对辅助启动和目标状态的形式施加更严格的条件`AmpAmpObliviousByReflectionPhases`，而不是在中。

  假定 $A{0}\_\ket f\ket{0}\_A = \ket{\text{start}}\_{fa} $ 为计算基础 $ \ket\_{0}\_f\ket{0}$ 准备辅助开始状态 $ \ket{\text{start}} {fa} $。

  假定目标状态标有 $ \ket{1}\_f $。

  假设\_\begin{align} O\ket {\ text {start}} {fa} \ket{\psi}\_s = \lambda\ket{1}\_f\ket {\ text {任何}}\_a\ket {\ text {target}}\_s U \ket{\psi}\_s + \sqrt{1-| \lambda | ^ 2} \ket{0}\_f\cdots，\end{align} 用于某些单一 $U $。
syntax: 'function ObliviousAmplitudeAmplificationFromStatePreparation (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateOracle : Microsoft.Quantum.Oracles.DeterministicStateOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, idxFlagQubit : Int) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateOracle : Microsoft.Quantum.Oracles.DeterministicStateOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, idxFlagQubit : Int)'
  types:
  - name: phases
    summary: 部分反射的阶段
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateOracle
    summary: 准备辅助启动状态的单一 oracle $A $
    uid: microsoft.quantum.oracles.deterministicstateoracle
  - name: signalOracle
    summary: 单一 oracle $O 类型`ObliviousOracle` ，它在辅助和系统寄存器上共同操作
    uid: microsoft.quantum.oracles.obliviousoracle
  - name: idxFlagQubit
    summary: Qubit 标志注册的索引
    isPrimitive: true
    uid: Int
output:
  content: ((Qubit[], Qubit[]) => Unit is Adj + Ctl)
  types:
  - summary: 基于部分反射实现在意波幅放大的操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: adc6f48a5d335eb9dc92dcb13425de900b5c8563
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82680128"
