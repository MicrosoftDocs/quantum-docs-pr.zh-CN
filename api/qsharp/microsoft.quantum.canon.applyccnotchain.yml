### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyccnotchain
name: ApplyCCNOTChain
type: operation
namespace: microsoft.quantum.canon
summary: >-
  实现控制在两个 qubit 寄存器的相应位上控制的 CCNOT 入口的层叠，这是在其中一个寄存器的下一个 qubit 上进行的。

  从两个寄存器中的位置0开始，将 CCNOT 应用于目标寄存器的位置1处的 qubit，然后由 qubits 在目标寄存器中的位置2进行控制，在目标 qubits 的位置2处进行控制，以目标 qubit 上的操作结束 `Length(nQubits)-1` 。
remarks: 目标 qubit 注册必须有一个以上的 qubit。
syntax: 'operation ApplyCCNOTChain (register : Qubit[], targets : Qubit[]) : Unit'
input:
  content: '(register : Qubit[], targets : Qubit[])'
  types:
  - name: register
    summary: Qubit register，仅用于控件。
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targets
    summary: Qubit register，用于控件和作为目标。
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: bed26b605d9924a10a663c238d61914b381abb9d
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91473660"
