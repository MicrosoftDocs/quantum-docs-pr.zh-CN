### YamlMime:QSharpNamespace
uid: microsoft.quantum.canon
name: Canon
functions:
- uid: microsoft.quantum.canon.asqubitarray
  summary: >-
    > [!WARNING]

    > 弃用此函数已被移除。
- uid: microsoft.quantum.canon.assertalmostequal
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Diagnostics.NearEqualityFactD"。
- uid: microsoft.quantum.canon.assertalmostequaltol
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Diagnostics.EqualityWithinToleranceFact"。
- uid: microsoft.quantum.canon.assertboolarrayequal
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Diagnostics.AllEqualityFactB"。
- uid: microsoft.quantum.canon.assertboolequal
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Diagnostics.EqualityFactB"。
- uid: microsoft.quantum.canon.assertintequal
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Diagnostics.EqualityFactI"。
- uid: microsoft.quantum.canon.assertresultequal
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Diagnostics.EqualityFactR"。
- uid: microsoft.quantum.canon.bigendiantolittleendian
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.BigEndianAsLittleEndian"。
- uid: microsoft.quantum.canon.bind
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.bound"。
- uid: microsoft.quantum.canon.binda
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.bounda"。
- uid: microsoft.quantum.canon.bindc
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.boundc"。
- uid: microsoft.quantum.canon.bindca
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.boundca"。
- uid: microsoft.quantum.canon.bitsize
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.bitsizei"。
- uid: microsoft.quantum.canon.boolarrfrompositiveint
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.intasboolarray"。
- uid: microsoft.quantum.canon.boolarrfromresultarr
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.resultarrayasboolarray"。
- uid: microsoft.quantum.canon.boolfromresult
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.resultasbool"。
- uid: microsoft.quantum.canon.bound
  summary: 给定针对单个输入的操作数组时，将生成一个按顺序执行每个给定操作的新操作。
- uid: microsoft.quantum.canon.bounda
  summary: >-
    给定针对单个输入的操作数组时，将生成一个按顺序执行每个给定操作的新操作。

    修饰符 `A` 指示数组中的所有操作都是 adjointable 的。
- uid: microsoft.quantum.canon.boundc
  summary: >-
    给定针对单个输入的操作数组时，将生成一个按顺序执行每个给定操作的新操作。

    修饰符 `C` 指示数组中的所有操作都可控制。
- uid: microsoft.quantum.canon.boundca
  summary: >-
    给定针对单个输入的操作数组时，将生成一个按顺序执行每个给定操作的新操作。

    修饰符 `CA` 指示数组中的所有操作都是 adjointable 的，并且可控。
- uid: microsoft.quantum.canon.ccontrolled
  summary: 给定操作 op，返回一个新操作，该操作将应用操作（如果古典控制位为 true）。 如果 `false`，则不会执行任何操作。
- uid: microsoft.quantum.canon.ccontrolleda
  summary: >-
    给定操作 op，返回一个新操作，该操作将应用操作（如果古典控制位为 true）。 如果 `false`，则不会执行任何操作。

    修饰符 `A` 指示操作为 adjointable。
- uid: microsoft.quantum.canon.ccontrolledc
  summary: >-
    给定操作 op，返回一个新操作，该操作将应用操作（如果古典控制位为 true）。 如果 `false`，则不会执行任何操作。

    修饰符 `C` 指示操作可控制。
- uid: microsoft.quantum.canon.ccontrolledca
  summary: >-
    给定操作 op，返回一个新操作，该操作将应用操作（如果古典控制位为 true）。 如果 `false`，则不会执行任何操作。

    修饰符 `CA` 指示操作可控制和 adjointable。
- uid: microsoft.quantum.canon.compose
  summary: >-
    生成两个函数的组合。


    也就是说，如果 $g $ $f 两个函数，则返回一个表示 $f \circ g $ 的新函数。
- uid: microsoft.quantum.canon.conjugatedby
  summary: 给定的外部和内部操作返回一个新的操作，该操作将由外部操作词干内部操作。
- uid: microsoft.quantum.canon.conjugatedbya
  summary: 给定的外部和内部操作返回一个新的操作，该操作将由外部操作词干内部操作。
- uid: microsoft.quantum.canon.conjugatedbyc
  summary: 给定的外部和内部操作返回一个新的操作，该操作将由外部操作词干内部操作。
- uid: microsoft.quantum.canon.conjugatedbyca
  summary: 给定的外部和内部操作返回一个新的操作，该操作将由外部操作词干内部操作。
- uid: microsoft.quantum.canon.continuedfractionconvergent
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.continuedfractionconvergenti"。
- uid: microsoft.quantum.canon.controlledonbitstring
  summary: 如果控件注册状态对应于指定的位掩码，则返回在目标寄存器上应用 oracle 的单一运算符。
- uid: microsoft.quantum.canon.controlledonint
  summary: 如果控件注册状态对应于指定的正整数，则返回一个单一运算符，该运算符应用目标寄存器上的 oracle。
- uid: microsoft.quantum.canon.curriedop
  summary: >-
    返回对两个输入的操作的扩充版本。


    也就是说，假设有一个具有两个输入的操作，则此函数将应用咖喱的 isomorphism $f （x，y） \equiv f （x）（y） $ 以返回一个输入的操作，该操作返回一个输入的操作。
- uid: microsoft.quantum.canon.curryop
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.curriedop"。
- uid: microsoft.quantum.canon.decomposeintotimestepsca
  summary: 返回为给定操作实现 Trotter – Suzuki 集成器的操作。
- uid: microsoft.quantum.canon.delayed
  summary: 返回应用给定自变量的给定操作的操作。
- uid: microsoft.quantum.canon.delayeda
  summary: 返回应用给定自变量的给定操作的操作。
- uid: microsoft.quantum.canon.delayedc
  summary: 返回应用给定自变量的给定操作的操作。
- uid: microsoft.quantum.canon.delayedca
  summary: 返回应用给定自变量的给定操作的操作。
- uid: microsoft.quantum.canon.embedpauli
  summary: 给定 qubit Pauli 运算符和 qubit 的索引后，将返回一个多 qubit Pauli 运算符，该运算符具有该索引处给定的单 qubit 运算符，并在每个其他索引处 `PauliI`。
- uid: microsoft.quantum.canon.expmod
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.expmodi"。
- uid: microsoft.quantum.canon.extendedgcd
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.extendedgreatestcommondivisori"。
- uid: microsoft.quantum.canon.filter
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Arrays.Filtered"。
- uid: microsoft.quantum.canon.forall
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Arrays.All"。
- uid: microsoft.quantum.canon.forany
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Arrays.Any"。
- uid: microsoft.quantum.canon.fst
  summary: 给定一对，返回其第一个元素。
- uid: microsoft.quantum.canon.gcd
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.greatestcommondivisori"。
- uid: microsoft.quantum.canon.ignore
  summary: 忽略操作或函数的输出。
- uid: microsoft.quantum.canon.intabs
  summary: >-
    > [!WARNING]

    > 弃用此函数已被移除。
- uid: microsoft.quantum.canon.intarrayfromrange
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.rangeasintarray"。
- uid: microsoft.quantum.canon.intmax
  summary: >-
    > [!WARNING]

    > 弃用此函数已被移除。
- uid: microsoft.quantum.canon.inversemod
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.inversemodi"。
- uid: microsoft.quantum.canon.iscoprime
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.greatestcommondivisori"。
- uid: microsoft.quantum.canon.isresultone
  summary: 测试给定的结果值是否等于 `One`。
- uid: microsoft.quantum.canon.isresultzero
  summary: 测试给定的结果值是否等于 `Zero`。
- uid: microsoft.quantum.canon.littleendiantobigendian
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian"。
- uid: microsoft.quantum.canon.map
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Arrays.Mapped"。
- uid: microsoft.quantum.canon.mapindex
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Arrays.MappedByIndex"。
- uid: microsoft.quantum.canon.modulus
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.modulusi"。
- uid: microsoft.quantum.canon.multiplexerbruteforcefromgenerator
  summary: >-
    返回一个按 _j $ 的乘法控制的单一操作，该 $U 操作将应用单一 $V qubit 号状态 $ \ket{j} $ 时应用单一的。


    $U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.multiplexerfromgenerator
  summary: >-
    返回一个按 _j $ 的乘法控制的单一操作，该 $U 操作将应用单一 $V qubit 号状态 $ \ket{j} $ 时应用单一的。


    $U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.nearequalityfact
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Diagnostics.NearEqualityFactD"。
- uid: microsoft.quantum.canon.operationpow
  summary: >-
    引发幂运算。


    也就是说，在给定一个表示入口 $U $ 的操作的情况下，将为 power $m $ $U ^ m $ 返回一个新操作。
- uid: microsoft.quantum.canon.operationpowa
  summary: >-
    引发幂运算。

    修饰符 `A` 指示操作为 adjointable。


    也就是说，在给定一个表示入口 $U $ 的操作的情况下，将为 power $m $ $U ^ m $ 返回一个新操作。
- uid: microsoft.quantum.canon.operationpowc
  summary: >-
    引发幂运算。

    修饰符 `C` 指示操作可控制。


    也就是说，在给定一个表示入口 $U $ 的操作的情况下，将为 power $m $ $U ^ m $ 返回一个新操作。
- uid: microsoft.quantum.canon.operationpowca
  summary: >-
    引发幂运算。

    修饰符 `A` 指示操作可控制和 adjointable。


    也就是说，在给定一个表示入口 $U $ 的操作的情况下，将为 power $m $ $U ^ m $ 返回一个新操作。
- uid: microsoft.quantum.canon.pad
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Arrays.Padded"。
- uid: microsoft.quantum.canon.paulifrombitstring
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.boolarrayaspauli"。
- uid: microsoft.quantum.canon.pnormalize
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.math.pnormalized"。
- uid: microsoft.quantum.canon.positiveintfromboolarr
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.boolarrayasint"。
- uid: microsoft.quantum.canon.positiveintfromresultarr
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.resultarrayasint"。
- uid: microsoft.quantum.canon.restrictedtosubregister
  summary: 将操作限制为寄存器的索引数组，即，subregister。
- uid: microsoft.quantum.canon.restrictedtosubregistera
  summary: >-
    将操作限制为寄存器的索引数组，即，subregister。

    修饰符 `A` 指示操作为 adjointable。
- uid: microsoft.quantum.canon.restrictedtosubregisterc
  summary: >-
    将操作限制为寄存器的索引数组，即，subregister。

    修饰符 `C` 指示操作可控制。
- uid: microsoft.quantum.canon.restrictedtosubregisterca
  summary: >-
    将操作限制为寄存器的索引数组，即，subregister。

    修饰符 `CA` 指示操作可控制和 adjointable。
- uid: microsoft.quantum.canon.restricttosubregister
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.restrictedtosubregister"。
- uid: microsoft.quantum.canon.restricttosubregistera
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.restrictedtosubregistera"。
- uid: microsoft.quantum.canon.restricttosubregisterc
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.restrictedtosubregisterc"。
- uid: microsoft.quantum.canon.restricttosubregisterca
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.restrictedtosubregisterca"。
- uid: microsoft.quantum.canon.resultarrfromboolarr
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.resultarrayasboolarray"。
- uid: microsoft.quantum.canon.resultasint
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.resultarrayasint"。
- uid: microsoft.quantum.canon.resultfrombool
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.boolasresult"。
- uid: microsoft.quantum.canon.reverse
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Arrays.Reversed"。
- uid: microsoft.quantum.canon.snd
  summary: 如果给定对，则返回第二个元素。
- uid: microsoft.quantum.canon.splitarray
  summary: >-
    > [!WARNING]

    > 已弃用，请改用 @"Microsoft.Quantum.Arrays.Partitioned"。
- uid: microsoft.quantum.canon.stackcapacity
  summary: 检索 <xref:microsoft.quantum.canon.resultstack>的容量。
- uid: microsoft.quantum.canon.stacklength
  summary: 检索存储在 <xref:microsoft.quantum.canon.resultstack>中的元素的数目。
- uid: microsoft.quantum.canon.stacknew
  summary: 创建具有给定容量的新空 <xref:microsoft.quantum.canon.resultstack>。
- uid: microsoft.quantum.canon.stackpeek
  summary: 检索 <xref:microsoft.quantum.canon.resultstack>的最顶层元素。
- uid: microsoft.quantum.canon.stackpop
  summary: 从 <xref:microsoft.quantum.canon.resultstack>中移除最顶层元素。
- uid: microsoft.quantum.canon.stackpush
  summary: 将新元素推送到 <xref:microsoft.quantum.canon.resultstack>。
- uid: microsoft.quantum.canon.tooperation
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.convert.functionasoperation"。
- uid: microsoft.quantum.canon.transformedoperation
  summary: 给定一个函数和一个操作，返回一个新的操作，其输入由给定函数转换。
- uid: microsoft.quantum.canon.transformedoperationa
  summary: 给定一个函数和一个操作，返回一个新的操作，其输入由给定函数转换。
- uid: microsoft.quantum.canon.transformedoperationc
  summary: 给定一个函数和一个操作，返回一个新的操作，其输入由给定函数转换。
- uid: microsoft.quantum.canon.transformedoperationca
  summary: 给定一个函数和一个操作，返回一个新的操作，其输入由给定函数转换。
- uid: microsoft.quantum.canon.uncurriedop
  summary: 给定一个返回操作的函数，返回一个将两个输入作为元组的新操作。
- uid: microsoft.quantum.canon.uncurriedopa
  summary: >-
    给定一个返回操作的函数，返回一个将两个输入作为元组的新操作。

    修饰符 `A` 指示操作是 adjointable 的。
- uid: microsoft.quantum.canon.uncurriedopc
  summary: >-
    给定一个返回操作的函数，返回一个将两个输入作为元组的新操作。

    修饰符 `C` 指示操作可控制。
- uid: microsoft.quantum.canon.uncurriedopca
  summary: >-
    给定一个返回操作的函数，返回一个将两个输入作为元组的新操作。

    修饰符 `CA` 指示操作可以控制和 adjointable。
- uid: microsoft.quantum.canon.uncurryop
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.uncurriedop"。
- uid: microsoft.quantum.canon.uncurryopa
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.uncurriedopa"。
- uid: microsoft.quantum.canon.uncurryopc
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.uncurriedopc"。
- uid: microsoft.quantum.canon.uncurryopca
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.canon.uncurriedopca"。
- uid: microsoft.quantum.canon.weightonepaulis
  summary: 返回给定数量的 qubits 上的所有 Pauli 运算符的数组。
- uid: microsoft.quantum.canon.xor
  summary: 这将计算两位的互斥或。
operations:
- uid: microsoft.quantum.canon.adiabaticstateenergyunitary
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"microsoft.quantum.simuilation.pnormalized"。
- uid: microsoft.quantum.canon.andladder
  summary: >-
    在目标 qubits 上执行受控的 "AND 阶梯"。


    这适用于计算基础向量： $ $ \begin{align} \ket{x\_1，\dots ..，x\_n} \ket{y\_1，\dots ..，y\_{n-1}} \mapsto \ket{x\_1，\dots ..，x\_n} \ket{y\_1 \oplus （x\_1 \land x\_2），\dots ..，y\_{n-1} \oplus （x\_1 \land x\_2 \land \cdots \land x\_{n-1}}，\end{align} $ $，其中 $ \ket{x\_1，\dots ..，x\_n} $ 表示 `controls`的计算基础状态，其中 $ \ket{y\_1，\dots ..，y\_{n-1}} $ 表示 `targets`的计算基础状态。
- uid: microsoft.quantum.canon.applydiagonalunitary
  summary: >-
    将复杂阶段数组应用于 qubits 寄存器的数字基础状态。


    也就是说，这会实现 $U $ 的对角单一操作，该操作将应用 $e ^ {i \theta_j} $ $n


    $U = \sum ^ {2 ^ n-1} _ {j = 0} e ^ {i\theta_j} \ 票证 {j} \ 寄存器 {j} $。
- uid: microsoft.quantum.canon.applyfermionicswap
  summary: 应用 Fermionic 交换。
- uid: microsoft.quantum.canon.applyif
  summary: 应用可在传统上使用的操作。
- uid: microsoft.quantum.canon.applyifa
  summary: 应用以传统位为依据的 adjointable 操作。
- uid: microsoft.quantum.canon.applyifc
  summary: 应用采用传统位的可控操作。
- uid: microsoft.quantum.canon.applyifca
  summary: 应用在传统上有条件的单一操作。
- uid: microsoft.quantum.canon.applyifelseb
  summary: 应用两个操作之一，具体取决于传统位的值。
- uid: microsoft.quantum.canon.applyifelseba
  summary: 应用两个 adjointable 操作之一，具体取决于传统位的值。
- uid: microsoft.quantum.canon.applyifelsebc
  summary: 应用两个可控操作之一，具体取决于传统位的值。
- uid: microsoft.quantum.canon.applyifelsebca
  summary: 应用两个单一操作之一，具体取决于传统位的值。
- uid: microsoft.quantum.canon.applyifelser
  summary: 应用两个操作之一，具体取决于传统结果的值。
- uid: microsoft.quantum.canon.applyifelsera
  summary: 应用两个 adjointable 操作之一，具体取决于古典结果的值。
- uid: microsoft.quantum.canon.applyifelserc
  summary: 应用两个可控操作之一，具体取决于古典结果的值。
- uid: microsoft.quantum.canon.applyifelserca
  summary: 应用两个单一操作中的一个，具体取决于古典结果的值。
- uid: microsoft.quantum.canon.applyifone
  summary: 应用对经典结果值为1的操作。
- uid: microsoft.quantum.canon.applyifonea
  summary: 应用一个 adjointable 操作，该操作可将传统结果值视为1。
- uid: microsoft.quantum.canon.applyifonec
  summary: 应用以传统结果值为一的可控操作。
- uid: microsoft.quantum.canon.applyifoneca
  summary: 将一个条件为的单一操作应用于传统结果值为1的值。
- uid: microsoft.quantum.canon.applyifzero
  summary: 应用对传统结果值为零的操作。
- uid: microsoft.quantum.canon.applyifzeroa
  summary: 应用对经典结果值为零的 adjointable 运算。
- uid: microsoft.quantum.canon.applyifzeroc
  summary: 应用在传统结果值为零的可控操作。
- uid: microsoft.quantum.canon.applyifzeroca
  summary: 应用在传统结果值为零的条件运算。
- uid: microsoft.quantum.canon.applymulticontrolledc
  summary: >-
    应用单个受控操作的多重控制版本。

    修饰符 `C` 指示 qubit 操作可控制。
- uid: microsoft.quantum.canon.applymulticontrolledca
  summary: >-
    应用单个受控操作的多重控制版本。

    修饰符 `CA` 指示 qubit 操作可控制和 adjointable。
- uid: microsoft.quantum.canon.applypauli
  summary: 给定多 qubit Pauli 运算符，将相应的操作应用于寄存器。
- uid: microsoft.quantum.canon.applypaulifrombitstring
  summary: 如果布尔数组的相应位与给定的输入相匹配，则对数组中的每个 qubit 应用 Pauli 运算符。
- uid: microsoft.quantum.canon.applyquantumfouriertransform
  summary: 对包含小 endian 表示形式整数的量程寄存器执行量程傅立叶转换。
- uid: microsoft.quantum.canon.applyquantumfouriertransformbe
  summary: >-
    > [!WARNING]

    > 不推荐使用此操作已被删除。
- uid: microsoft.quantum.canon.applyquantumfouriertransformle
  summary: ''
- uid: microsoft.quantum.canon.applyreversedopbigendian
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpBE"。
- uid: microsoft.quantum.canon.applyreversedopbigendiana
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpBEA"。
- uid: microsoft.quantum.canon.applyreversedopbigendianc
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpBEC"。
- uid: microsoft.quantum.canon.applyreversedopbigendianca
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpBEC"。
- uid: microsoft.quantum.canon.applyreversedoplittleendian
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpLE"。
- uid: microsoft.quantum.canon.applyreversedoplittleendiana
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpLEA"。
- uid: microsoft.quantum.canon.applyreversedoplittleendianc
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpLEC"。
- uid: microsoft.quantum.canon.applyreversedoplittleendianca
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpLEC"。
- uid: microsoft.quantum.canon.applyripplecarrycomparatorbe
  summary: >-
    > [!WARNING]

    > 不推荐使用此操作已被删除。
- uid: microsoft.quantum.canon.applyripplecarrycomparatorle
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.CompareUsingRippleCarry"。
- uid: microsoft.quantum.canon.applytoeach
  summary: 对寄存器中的每个元素应用 qubit 操作。
- uid: microsoft.quantum.canon.applytoeacha
  summary: >-
    对寄存器中的每个元素应用 qubit 操作。

    修饰符 `A` 指示 qubit 操作是 adjointable。
- uid: microsoft.quantum.canon.applytoeachc
  summary: >-
    对寄存器中的每个元素应用 qubit 操作。

    修饰符 `C` 指示 qubit 操作可控制。
- uid: microsoft.quantum.canon.applytoeachca
  summary: >-
    对寄存器中的每个元素应用 qubit 操作。

    修饰符 `CA` 指示 qubit 操作可控制和 adjointable。
- uid: microsoft.quantum.canon.applytoeachindex
  summary: 将单 qubit 操作应用于寄存器中的每个索引元素。
- uid: microsoft.quantum.canon.applytoeachindexa
  summary: >-
    将单 qubit 操作应用于寄存器中的每个索引元素。

    修饰符 `A` 指示 qubit 操作是 adjointable。
- uid: microsoft.quantum.canon.applytoeachindexc
  summary: >-
    将单 qubit 操作应用于寄存器中的每个索引元素。

    修饰符 `C` 指示 qubit 操作可控制。
- uid: microsoft.quantum.canon.applytoeachindexca
  summary: >-
    将单 qubit 操作应用于寄存器中的每个索引元素。

    修饰符 `CA` 指示 qubit 操作 adjointable 且可控。
- uid: microsoft.quantum.canon.applytofirstqubit
  summary: 将操作应用于寄存器中的第一个 qubit。
- uid: microsoft.quantum.canon.applytofirstqubita
  summary: >-
    将操作应用于寄存器中的第一个 qubit。

    修饰符 `A` 指示操作为 adjointable。
- uid: microsoft.quantum.canon.applytofirstqubitc
  summary: >-
    将操作 op 应用于寄存器中的第一个 qubit。

    修饰符 `C` 指示操作可控制。
- uid: microsoft.quantum.canon.applytofirstqubitca
  summary: >-
    将操作 op 应用于寄存器中的第一个 qubit。

    修饰符 `CA` 指示操作可控制和 adjointable。
- uid: microsoft.quantum.canon.applytofirstthreequbits
  summary: 将操作应用于寄存器中的前三个 qubits。
- uid: microsoft.quantum.canon.applytofirstthreequbitsa
  summary: >-
    将操作应用于寄存器中的前三个 qubits。

    修饰符 `A` 指示操作为 adjointable。
- uid: microsoft.quantum.canon.applytofirstthreequbitsc
  summary: >-
    将操作应用于寄存器中的前三个 qubits。

    修饰符 `C` 指示操作可控制。
- uid: microsoft.quantum.canon.applytofirstthreequbitsca
  summary: >-
    将操作应用于寄存器中的前三个 qubits。

    修饰符 `CA` 指示操作可控制和 adjointable。
- uid: microsoft.quantum.canon.applytofirsttwoqubits
  summary: 将操作应用于寄存器中的前两个 qubits。
- uid: microsoft.quantum.canon.applytofirsttwoqubitsa
  summary: >-
    将操作应用于寄存器中的前两个 qubits。

    修饰符 `A` 指示操作为 adjointable。
- uid: microsoft.quantum.canon.applytofirsttwoqubitsc
  summary: >-
    将操作应用于寄存器中的前两个 qubits。

    修饰符 `C` 指示操作可控制。
- uid: microsoft.quantum.canon.applytofirsttwoqubitsca
  summary: >-
    将操作应用于寄存器中的前两个 qubits。

    修饰符 `CA` 指示操作可控制和 adjointable。
- uid: microsoft.quantum.canon.applytopartition
  summary: 将一对操作应用于寄存器的给定分区分为两部分。
- uid: microsoft.quantum.canon.applytopartitiona
  summary: >-
    将一对操作应用于寄存器的给定分区分为两部分。

    修饰符 `A` 指示操作为 adjointable。
- uid: microsoft.quantum.canon.applytopartitionc
  summary: >-
    将一对操作应用于寄存器的给定分区分为两部分。

    修饰符 `C` 指示操作可控制。
- uid: microsoft.quantum.canon.applytopartitionca
  summary: >-
    将一对操作应用于寄存器的给定分区分为两部分。

    修饰符 `CA` 指示操作可控制和 adjointable。
- uid: microsoft.quantum.canon.applytosubregister
  summary: 将操作应用于寄存器的 subregister，其 qubits 由其索引数组指定。
- uid: microsoft.quantum.canon.applytosubregistera
  summary: >-
    将操作应用于寄存器的 subregister，其 qubits 由其索引数组指定。

    修饰符 `A` 指示操作为 adjointable。
- uid: microsoft.quantum.canon.applytosubregisterc
  summary: >-
    将操作应用于寄存器的 subregister，其 qubits 由其索引数组指定。

    修饰符 `C` 指示操作可控制。
- uid: microsoft.quantum.canon.applytosubregisterca
  summary: >-
    将操作应用于寄存器的 subregister，其 qubits 由其索引数组指定。

    修饰符 `CA` 指示操作可控制和 adjointable。
- uid: microsoft.quantum.canon.applywith
  summary: 给定两个操作，将一个操作应用到另一个运算。
- uid: microsoft.quantum.canon.applywitha
  summary: 给定两个操作，将一个操作应用到另一个运算。
- uid: microsoft.quantum.canon.applywithc
  summary: ''
- uid: microsoft.quantum.canon.applywithca
  summary: 给定两个操作，将一个操作应用到另一个运算。
- uid: microsoft.quantum.canon.applywithinputtransformation
  summary: 给定接受某些输入的操作，返回与该操作兼容的输出的函数以及该函数的输入将使用函数将输入转换为操作所需的格式。
- uid: microsoft.quantum.canon.applywithinputtransformationa
  summary: 给定接受某些输入的操作，返回与该操作兼容的输出的函数以及该函数的输入将使用函数将输入转换为操作所需的格式。
- uid: microsoft.quantum.canon.applywithinputtransformationc
  summary: 给定接受某些输入的操作，返回与该操作兼容的输出的函数以及该函数的输入将使用函数将输入转换为操作所需的格式。
- uid: microsoft.quantum.canon.applywithinputtransformationca
  summary: 给定接受某些输入的操作，返回与该操作兼容的输出的函数以及该函数的输入将使用函数将输入转换为操作所需的格式。
- uid: microsoft.quantum.canon.approximateqft
  summary: 将大致的量程傅立叶转换（AQFT）应用到一个量程寄存器。
- uid: microsoft.quantum.canon.asserthighestbit
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.AssertMostSignificantBit"。
- uid: microsoft.quantum.canon.assertlessthanphasele
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.AssertPhaseLessThan"。
- uid: microsoft.quantum.canon.assertphase
  summary: >-
    断言 superposition 状态相同的阶段具有预期值。


    具体而言，断言某些任意实数的 "\phi $" 的量程状态（可能表示为 $ \frac{e ^ {i t}} {\sqrt{2}} （e ^ {i\phi} \ 票证{0} + e ^ {-i\phi} \ 票证{1}） $）为所需的值。
- uid: microsoft.quantum.canon.assertprobintbe
  summary: >-
    > [!WARNING]

    > 不推荐使用此操作已被删除。
- uid: microsoft.quantum.canon.cnotchain
  summary: >-
    计算 qubits 数组的奇偶校验。


    它遵循模式 $ \ket{q_0} \ket{q_0 \oplus q_1} \ket{q_0 \oplus q_1 \oplus q_2} \cdots $。
- uid: microsoft.quantum.canon.cnotchaintarget
  summary: >-
    计算 qubits 数组到目标 qubit 的奇偶校验。


    如果数组最初处于状态 $ \ket{q_0} \ket{q_1} \cdots \ket{q_{\text{target}}} $，则最终状态由 $ \ket{q_0} \ket{q_1 \oplus q_0} \cdots \ket{q_{n-1} \oplus \cdots \oplus q_0 \oplus q_ {\text{target}}} $ 提供。
- uid: microsoft.quantum.canon.copymostsignificantbitle
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.CopyMostSignificantBit"。
- uid: microsoft.quantum.canon.cx
  summary: >-
    将受控的 X （CX）入口应用于一对 qubits。


    $ $ \begin{align} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \end{align}，$ $ 其中的行和列组织为 "量程概念" 指南。
- uid: microsoft.quantum.canon.cy
  summary: >-
    将受控 Y （CY）入口应用于一对 qubits。


    $ $ \begin{align} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 &-i \\\\ 0 & 0 & & 0 \end{align}，$ $ 其中的行和列组织为 "量程概念" 指南。
- uid: microsoft.quantum.canon.cz
  summary: >-
    将受控-Z （CZ）入口应用于一对 qubits。


    $ $ \begin{align} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 0 & 0 &-1 \end{align}，$ $ 其中的行和列组织为 "量程概念" 指南。
- uid: microsoft.quantum.canon.delay
  summary: 应用给定操作，延迟。
- uid: microsoft.quantum.canon.delaya
  summary: 应用给定操作，延迟。
- uid: microsoft.quantum.canon.delayc
  summary: 应用给定操作，延迟。
- uid: microsoft.quantum.canon.delayca
  summary: 应用给定操作，延迟。
- uid: microsoft.quantum.canon.hy
  summary: >-
    将 Y 基础模拟应用于交换 Z 轴和 Y 轴的 Hadamard 转换。


    单个 qubit 上的 Y Hadamard 转换 $H _Y = S H $ 为：


    \begin{align} H_Y \mathrel{： =} \frac{1}{\sqrt{2}} \begin{bmatrix} 1 & 1 \\\\ &-i \end{bmatrix}。

    \end{align}
- uid: microsoft.quantum.canon.inplacexorbe
  summary: >-
    > [!WARNING]

    > 不推荐使用此操作已被删除。
- uid: microsoft.quantum.canon.inplacexorle
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Measurement.ApplyXorInPlace"。
- uid: microsoft.quantum.canon.integerincrementle
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.IncrementByInteger"。
- uid: microsoft.quantum.canon.integerincrementphasele
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.IncrementPhaseByInteger"。
- uid: microsoft.quantum.canon.iteratethroughcartesianpower
  summary: 循环访问变量，如 arr，通过笛卡尔积 [0，绑定-1] × [0，绑定-1] × [0，绑定-1]，并为笛卡尔积的每个元素调用 op （arr）
- uid: microsoft.quantum.canon.iteratethroughcartesianproduct
  summary: 通过笛卡尔积 [0，界限 [0]-1] × [0，界限 [1]-1] × [0，界限 [长度（界限）-1]-1] 来循环访问变量 `arr`，并为笛卡尔积的每个元素调用 op （arr）。
- uid: microsoft.quantum.canon.measureintegerbe
  summary: >-
    > [!WARNING]

    > 不推荐使用此操作已被删除。
- uid: microsoft.quantum.canon.modularaddproductle
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.MultiplyAndAddByModularInteger"。
- uid: microsoft.quantum.canon.modularaddproductphasele
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.MultiplyAndAddPhaseByModularInteger"。
- uid: microsoft.quantum.canon.modularincrementle
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.ModularIncrementByInteger"。
- uid: microsoft.quantum.canon.modularincrementphasele
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.IncrementPhaseByModularInteger"。
- uid: microsoft.quantum.canon.modularmultiplybyconstantle
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Arithmetic.MultiplyByModularInteger"。
- uid: microsoft.quantum.canon.multiplexoperations
  summary: >-
    应用由数值状态数组控制的操作的数组。


    也就是说，应用 $U $ 的乘法控制的单一操作，该操作在通过 $n $-qubit number state $ \ket{j} $ 控制时应用单一的 $V _j $。


    $U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.multiplexoperationsbruteforcefromgenerator
  summary: >-
    应用 $U $ 的乘法控制的单一操作，该操作将应用单一 $V 的 qubit 数字状态 $ \ket{j} $。


    $U = \sum ^ {N-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.multiplexoperationsfromgenerator
  summary: >-
    应用 $U $ 的乘法控制的单一操作，该操作将应用单一 $V 的 qubit 数字状态 $ \ket{j} $ 控制。


    $U = \sum ^ {N-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.multiplexpauli
  summary: >-
    对 qubits 数组应用 Pauli 旋转。


    这会将逐控制的单一操作应用 $U $，该操作会按角度 $ \theta_j $ （qubit Pauli $P 运算符）执行旋转，$n $-qubit number state $ \ket{j} $ 控制。


    $U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes e ^ {i P \theta_j} $。
- uid: microsoft.quantum.canon.multiplexz
  summary: >-
    对 qubits 数组应用 Pauli Z 旋转。


    这会将逐控制的单一操作应用 $U $，该操作会按角度 $ \theta_j $ （qubit Pauli $Z 运算符）执行旋转，$n $-qubit number state $ \ket{j} $ 控制。


    $U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes e ^ {i Z \theta_j} $。
- uid: microsoft.quantum.canon.noop
  summary: 对参数执行标识操作（无操作）。
- uid: microsoft.quantum.canon.qft
  summary: 对包含大字节序表示形式整数的量程寄存器执行量程傅立叶转换。
- uid: microsoft.quantum.canon.qftle
  summary: 对包含小 endian 表示形式整数的量程寄存器执行量程傅立叶转换。
- uid: microsoft.quantum.canon.rall0
  summary: >-
    执行阶段移位操作。


    $R = \boldone-（1-e ^ {i \phi}） \ket{0\cdots 0} \bra{0\cdots 0} $。
- uid: microsoft.quantum.canon.rall1
  summary: >-
    执行阶段移位操作。


    $R = \boldone-（1-e ^ {i \phi}） \ket{1\cdots 1} \bra{1\cdots 1} $。
- uid: microsoft.quantum.canon.swapreverseregister
  summary: 使用交换入口反转寄存器中 qubits 的顺序。
- uid: microsoft.quantum.canon.with
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Canon.ApplyWith"。
- uid: microsoft.quantum.canon.witha
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Canon.ApplyWithA"。
- uid: microsoft.quantum.canon.withc
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Canon.ApplyWithC"。
- uid: microsoft.quantum.canon.withca
  summary: >-
    > [!WARNING]

    > 弃用，请使用 @"Microsoft.Quantum.Canon.ApplyWithCA"。
newtypes:
- uid: microsoft.quantum.canon.ccnotop
  summary: CCNOT 入口的签名类型。
- uid: microsoft.quantum.canon.resultstack
  summary: >-
    `Result` 变量的后进先出堆栈。

    堆栈包含整数容量、堆栈指针和 `Result` 数组。
ms.openlocfilehash: 8767d438adcecd7ccbd539d7c123ac42cfb8c295
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 10/30/2019
ms.locfileid: "73065157"
