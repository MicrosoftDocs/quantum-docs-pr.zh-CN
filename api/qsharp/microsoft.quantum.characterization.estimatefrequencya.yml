### YamlMime:QSharpType
uid: microsoft.quantum.characterization.estimatefrequencya
name: EstimateFrequencyA
type: operation
namespace: microsoft.quantum.characterization
summary: 对于 adjointable 和度量值的准备， `Zero` 通过执行给定数量的试验来估算度量成功 (返回) 的频率。
remarks: 对于 adjointable 操作，可以执行某些假设，如调用操作时，会将 qubits 的状态准备为完全相同的状态，从而使目标计算机能够进行某种性能优化。
syntax: 'operation EstimateFrequencyA (preparation : (Qubit[] => Unit is Adj), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int) : Double'
input:
  content: '(preparation : (Qubit[] => Unit is Adj), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int)'
  types:
  - name: preparation
    summary: Adjointable 操作 $P $，该操作在其输入寄存器上准备给定状态 $ \rho $。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: measurement
    summary: 操作 $M $ 表示感兴趣的度量。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Result
  - name: nQubits
    summary: 准备和测量每个操作的 qubits 数目。
    isPrimitive: true
    uid: Int
  - name: nMeasurements
    summary: 为了估计感兴趣的频率，应执行度量的次数。
    isPrimitive: true
    uid: Int
output:
  content: Double
  types:
  - summary: '估计 $ \hat{p} $ of $M (P ( \ket{00 \cdots 0} \bra{00 \cdots 0} ) # B3 $ 返回的频率 `Zero` ，使用无偏差二项式估计器 $ \hat{p} = n \_ {\uparrow}/n \_ {\text{measurements}} $，其中 $n \_ {\uparrow} $ 是 `Zero` 观察到的结果数。'
    isPrimitive: true
    uid: Double
metadata:
  ms.openlocfilehash: 00d54b9dec4e2b57002b04dda4072b9d186baba4
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89354529"
