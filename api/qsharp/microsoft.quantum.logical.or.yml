### YamlMime:QSharpType
uid: microsoft.quantum.logical.or
name: Or
type: function
namespace: Microsoft.Quantum.Logical
summary: 返回两个值的布尔析取。
remarks: >-
  与`or`运算符不同，此函数不会进行短路，因此，这两个输入都是完全计算的。


  最多短路行为，如下所示：


  ```Q#

  let x = a or b;

  let x = Or(a, b);

  ```
syntax: 'function Or (a : Bool, b : Bool) : Bool'
input:
  content: '(a : Bool, b : Bool)'
  types:
  - name: a
    summary: 要考虑的第一个值。
    isPrimitive: true
    uid: Bool
  - name: b
    summary: 要考虑的第二个值。
    isPrimitive: true
    uid: Bool
output:
  content: Bool
  types:
  - summary: '`true`当且仅当`a`或`b`为`true`时。'
    isPrimitive: true
    uid: Bool
metadata:
  ms.openlocfilehash: fb3d62473ec3fd7c40b44bfa919b69d54c5d0218
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82683563"
