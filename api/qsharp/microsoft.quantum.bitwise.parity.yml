### YamlMime:QSharpType
uid: microsoft.quantum.bitwise.parity
name: Parity
type: function
namespace: microsoft.quantum.bitwise
summary: 如果整数的二进制表示形式包含奇数个值，则返回 (1 的整数的按位奇偶校验，否则) 。
examples: >-
  ```qsharp

  let a = 248;

  let x = Parity(a); // x : Int = 1.

  ```
syntax: 'function Parity (a : Int) : Int'
input:
  content: '(a : Int)'
  types:
  - name: a
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: b9d4f086d4fdf4035e9afe95f3afe59353c2ba93
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89351112"
