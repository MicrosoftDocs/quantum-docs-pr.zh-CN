### YamlMime:QSharpType
uid: microsoft.quantum.canon.bound
name: Bound
type: function
namespace: Microsoft.Quantum.Canon
summary: 给定针对单个输入的操作数组时，将生成一个按顺序执行每个给定操作的新操作。
examples: >-
  以下项是等效的：


  ```qsharp

  let bound = Bound([U, V]);

  bound(x);

  ```


  and


  ```qsharp

  U(x); V(x);

  ```
syntax: "function Bound (operations : ('T => Unit)[]) : ('T => Unit)"
input:
  content: "(operations : ('T => Unit)[])"
  types:
  - name: operations
    summary: 要对给定输入执行的一系列操作。
    isArray: true
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: ('T => Unit)
  types:
  - summary: 一项新的操作，它对其输入按顺序执行每个给定的操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
typeParameters:
- uid: "'T"
  summary: 数组中的每个操作的作用。
seeAlso:
- microsoft.quantum.canon.boundc
- microsoft.quantum.canon.bounda
- microsoft.quantum.canon.boundca
ms.openlocfilehash: 67cb4cb93c5d306491bfce83caf1c112194991be
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 10/31/2019
ms.locfileid: "73220634"
