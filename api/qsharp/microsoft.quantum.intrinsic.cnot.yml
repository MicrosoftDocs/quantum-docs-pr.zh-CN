### YamlMime:QSharpType
uid: microsoft.quantum.intrinsic.cnot
name: CNOT
type: operation
namespace: microsoft.quantum.intrinsic
summary: >-
  将受控-NOT (CNOT-CONTAINS) 入口应用于一对 qubits。


  \begin{align} \operatorname{CNOT} \mathrel{： =} \begin{bmatrix} 1 & 0 & 0 & 0 \\ \\ 0 & 1 & 0 & 0 \\ \\ 0 & 0 & 0 & 1 \\ \\ 0 & 0 & 1 & 0 \end{bmatrix}，\end{align}


  行和列的排序顺序，如量程概念指南中所示。
remarks: >-
  等效于：


  ```qsharp

  Controlled X([control], target);

  ```
syntax: 'operation CNOT (control : Qubit, target : Qubit) : Unit'
input:
  content: '(control : Qubit, target : Qubit)'
  types:
  - name: control
    summary: 控制 CNOT-CONTAINS 入口的 qubit。
    isPrimitive: true
    uid: Qubit
  - name: target
    summary: CNOT-CONTAINS 入口的目标 qubit。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 76be7211917c6422beb17c1ca4fccb32c4594d17
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89347117"
