### YamlMime:QSharpType
uid: microsoft.quantum.diagnostics.assertoperationsequalinplace
name: AssertOperationsEqualInPlace
type: operation
namespace: microsoft.quantum.diagnostics
summary: >-
  假设有两个运算，则断言它们对于所有输入状态都是相同的。


  此断言是通过以下方式实现的：检查所有状态的操作的操作： $V _0 \otimes ... \otimes V_ {n-1} $，其中 $V _k $ 是状态 $ \ket {0} $，$ \ket $ {1} ，$ \ket{+} $，$ \ket{i} $ (+ 1 Eigenstate Of Pauli Y operator) 。


  此断言使用 $n $ qubits，需要对要比较的操作进行多次调用。
syntax: 'operation AssertOperationsEqualInPlace (nQubits : Int, givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit is Adj)) : Unit'
references: 状态 $ \ket {0} $、$ \ket {1} $、$ \ket{+} $ 和 $ \ket{i} $ 是语-Nielsen 的基础，如中所述[ *I. L. Chuang, M. A. Nielsen* ](https://arxiv.org/abs/quant-ph/9610001)。
input:
  content: '(nQubits : Int, givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit is Adj))'
  types:
  - name: nQubits
    summary: 操作和操作 $n $ 的 qubits 的数目 `givenU` `expectedU` 。
    isPrimitive: true
    uid: Int
  - name: givenU
    summary: 要检查 $n $ qubits 上的操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: expectedU
    summary: 要与进行比较 $n $ qubits 上的引用操作 `givenU` 。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- assertoperationsequalreferenced
metadata:
  ms.openlocfilehash: 2599379e7e6fbfdbb1cb17a5eb976244dcefb9ac
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91483520"
