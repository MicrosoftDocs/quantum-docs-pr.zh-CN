### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.carry
name: Carry
type: operation
namespace: microsoft.quantum.arithmetic
summary: 实现可逆的执行入口。 给定一个在 qubit 中进行编码的传入位， `carryIn` 并在和中编码两个被加数位， `summand1` 计算的 `summand2` 按位 xor `carryIn` ， `summand1` 并 `summand2` 在 qubit 中将 `summand2` 为 xored 到 qubit `carryOut` 。
syntax: 'operation Carry (carryIn : Qubit, summand1 : Qubit, summand2 : Qubit, carryOut : Qubit) : Unit'
input:
  content: '(carryIn : Qubit, summand1 : Qubit, summand2 : Qubit, carryOut : Qubit)'
  types:
  - name: carryIn
    summary: 传入的 qubit。
    isPrimitive: true
    uid: Qubit
  - name: summand1
    summary: 第一个被加数 qubit。
    isPrimitive: true
    uid: Qubit
  - name: summand2
    summary: 第二个被加数 qubit 被替换为与和之和的下 `summand1` 位 `summand2` 。
    isPrimitive: true
    uid: Qubit
  - name: carryOut
    summary: 执行 qubit 时，将 xored，并将其总和增加。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: b620fa934d3e40772c9a55eda317449e3329a6d5
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89327397"
