### YamlMime:QSharpType
uid: microsoft.quantum.preparation.prepareentangledstate
name: PrepareEntangledState
type: operation
namespace: Microsoft.Quantum.Preparation
summary: >-
  成对 entangles 两个 qubit 寄存器。


  也就是说，给定两个寄存器，在各自的寄存器上的每{1}对 \left{2}之间准备最大化放大{00} state ${11} \frac {\sqrt} \ket （\ket + \right qubits） $，假设每个注册都以 $ \ket{0\cdots 0} $ 状态启动。
syntax: 'operation PrepareEntangledState (left : Qubit[], right : Qubit[]) : Unit'
input:
  content: '(left : Qubit[], right : Qubit[])'
  types:
  - name: left
    summary: $ \Ket{0\cdots 0} $ 状态中的 qubit 数组
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: right
    summary: $ \Ket{0\cdots 0} $ 状态中的 qubit 数组
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: c761362c8793e4e08e7e702b2909f0253b8723d6
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82686541"
