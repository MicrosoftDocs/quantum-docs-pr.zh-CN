### YamlMime:QSharpType
uid: microsoft.quantum.preparation.prepareentangledstate
name: PrepareEntangledState
type: operation
namespace: microsoft.quantum.preparation
summary: >-
  成对 entangles 两个 qubit 寄存器。


  也就是说，假设有两个寄存器，则准备最大化放大 state $ \frac {1} {\sqrt {2} } \left ( \ket {00} + \ket \right 在 {11} 各自寄存器上的每对 qubits 之间) $，假设每个注册都以 $ \ket{0\cdots 0} $ 状态启动。
syntax: 'operation PrepareEntangledState (left : Qubit[], right : Qubit[]) : Unit'
input:
  content: '(left : Qubit[], right : Qubit[])'
  types:
  - name: left
    summary: $ \Ket{0\cdots 0} $ 状态中的 qubit 数组
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: right
    summary: $ \Ket{0\cdots 0} $ 状态中的 qubit 数组
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 4786dcb94a661b9057206418e66529d103f6aa60
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91485526"
