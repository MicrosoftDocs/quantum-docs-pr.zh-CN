### YamlMime:QSharpType
uid: microsoft.quantum.arrays.any
name: Any
type: function
namespace: Microsoft.Quantum.Arrays
summary: 给定为数组元素定义的数组和谓词，检查数组中是否至少有一个元素满足该谓词。
remarks: "函数是为泛型类型定义的，也就是说，只要有一个数组 `'T[]` 和一个函数 `predicate: 'T -> Bool` 我们就可以生成一个 `Bool` 值，该值指示某个元素是否满足 `predicate`。"
examples: >-
  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function IsThreePresent() : Bool {
      let arrayOfInts = [1, 2, 3, 4, 5];
      let is3Present = IsNumberPresentInArray(3, arrayOfInts);
      return is3Present;
  }


  function IsNumberPresentInArray(n : Int, array : Int[]) : Bool {
      return Any(EqualI(_, n), array);
  }

  ```
syntax: "function Any (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: 从 `'T` 到用于检查元素的 `Bool` 的函数。
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: "`'T`上的元素的数组。"
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: 应用于所有元素的谓词或函数的 `Bool` 值。
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: '`array` 元素的类型。'
metadata:
  ms.openlocfilehash: 35555080f90588bc61d70e89ea412a23209408d6
  ms.sourcegitcommit: 6ccea4a2006a47569c4e2c2cb37001e132f17476
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 02/28/2020
  ms.locfileid: "77905550"
