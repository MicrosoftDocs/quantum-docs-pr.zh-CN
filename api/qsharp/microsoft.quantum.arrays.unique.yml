### YamlMime:QSharpType
uid: microsoft.quantum.arrays.unique
name: Unique
type: function
namespace: microsoft.quantum.arrays
summary: >-
  返回一个没有相等相邻元素的新数组。


  如果给定了某个元素数组和一个用于测试相等性的函数，则此函数将返回一个新数组，其中保留了元素的相对顺序，但所有相等的相邻元素仅筛选为一个元素。
remarks: 如果有多个元素相等但并不相邻，则输出数组中将出现多个匹配项。  将此函数与结合使用 `Sorted` ，以获取包含整体唯一元素的数组。
examples: >-
  ```Q#

  let unique1 = Unique(EqualI, [1, 1, 3, 3, 2, 5, 5, 5, 7]);

  // same as [1, 3, 2, 5, 7]

  let unique2 = Unique(EqualI, [2, 2, 1, 1, 2, 2, 1, 1]);

  // same as [2, 1, 2, 1];

  let unique3 = Unique(EqualI, Sorted(LessThanOrEqualI, [2, 2, 1, 1, 2, 2, 1, 1]));

  // same as [1, 2];

  ```
syntax: "function Unique (equal : (('T, 'T) -> Bool), array : 'T[]) : 'T[]"
input:
  content: "(equal : (('T, 'T) -> Bool), array : 'T[])"
  types:
  - name: equal
    summary: 比较两个元素的函数，如果为，则此函数将 `a` 视为等于 `b` `equal(a, b)` `true` 。
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: 要针对唯一元素进行筛选的数组。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[]"
  types:
  - summary: 不具有相等相邻元素的数组。
    isArray: true
    uid: "'T"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: 的每个元素的类型 `array` 。
metadata:
  ms.openlocfilehash: a47f41ce4298035bd2ccf23dfd26491349f946f7
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91493500"
