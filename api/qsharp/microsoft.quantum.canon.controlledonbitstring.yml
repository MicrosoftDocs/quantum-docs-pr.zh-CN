### YamlMime:QSharpType
uid: microsoft.quantum.canon.controlledonbitstring
name: ControlledOnBitString
type: function
namespace: Microsoft.Quantum.Canon
summary: >-
  如果控件注册状态对应于指定的位掩码，则返回在目标寄存器上应用 oracle 的单一操作。


  此函数的输出是一个可以由单一转换 $U $ 进行表示的操作，此操作可由 \begin{align} U \ket{b_0 b_1 \cdots b_ {n-1}} \ket{\psi} = \ket{b_0 b_1 \cdots b_ {n-1}} \otimes \begin{cases} V \ket{\psi} & \textrm{if} （b_0 b_1 \cdots b_ {n-1}） = \\ \\ \texttt{bits} \ket{\psi} & \textrm{otherwise} \end{cases}，\end{align}，其中 $V $ 是表示`oracle`操作操作的单一转换。
remarks: >-
  `bits`和`controlRegister`的长度必须相等。


  给定布尔数组`bits`和单一操作`oracle`，此函数的输出是执行以下步骤的操作：


  * 将`X`操作应用到控制寄存器的每个 qubit，该控件`false`寄存器对应于`bits`的元素;

  * 应用`Controlled oracle`于控件和目标寄存器;

  * 将`X`操作应用于控件注册的每个 qubit，该控件`false`注册再次对应`bits`于的元素，以将控制寄存器返回到原始状态。


  `Controlled`函子的输出是的一种特殊情况， `ControlledOnBitString`其中`bits` ，等于`[true, ..., true]`。
examples: >-
  以下代码片段是等效的：


  ```qsharp

  (ControlledOnBitString(bits, oracle))(controlRegister, targetRegister);

  ```


  and


  ```qsharp

  within {
      ApplyPauliFromBitString(PauliX, false, bits, controlRegister);
  } apply {
      Controlled oracle(controlRegister, targetRegister);
  }

  ```


  下面的代码准备{1}{2}状态 $ \frac （{00} \ket + \ket{01} + \ket{10} + \ket{11}） $：


  ```qsharp

  using (register = Qubit[2]) {
      ApplyToEach(H, register);
      (ControlledOnBitString([false], Z))(register[0..0], register[1]);
  }

  ```
syntax: "function ControlledOnBitString (bits : Bool[], oracle : ('T => Unit is Adj + Ctl)) : ((Qubit[], 'T) => Unit is Adj + Ctl)"
input:
  content: "(bits : Bool[], oracle : ('T => Unit is Adj + Ctl))"
  types:
  - name: bits
    summary: 用于控制给定单一操作的位字符串。
    isArray: true
    isPrimitive: true
    uid: Bool
  - name: oracle
    summary: 要应用于目标寄存器的单一操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: ((Qubit[], 'T) => Unit is Adj + Ctl)
  types:
  - summary: 当控件注册状态对应`oracle`于位掩码`bits`时，适用于目标寄存器的单一操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: d5a6223c130150f42f83044aec19b1d5a875bb1d
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82680361"
