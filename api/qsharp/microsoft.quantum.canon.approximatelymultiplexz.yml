### YamlMime:QSharpType
uid: microsoft.quantum.canon.approximatelymultiplexz
name: ApproximatelyMultiplexZ
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  对 qubits 数组应用 Pauli Z 旋转，根据给定的公差截断小旋转角度。


  这将应用按角度 $ \ theta_j $ 来执行循环的多次控制的单一操作，该操作将由 $n $-qubit 号 state $ \ket{j} $ 控制，按角度 $ \ qubit Pauli operator $Z $ 进行旋转。

  具体而言，此操作可由单一


  $ $ \begin{align} U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j} \otimes e ^ {i Z \ theta_j}。

  \end{align} $ $
remarks: '`coefficients`如果指定少于 $ 2 ^ n $，则将用元素 $ \ theta_j = $0.0 填充。'
syntax: 'operation ApproximatelyMultiplexZ (tolerance : Double, coefficients : Double[], control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit) : Unit'
references: '- 量程逻辑电路的合成 Vivek Shende、Stephen Bullock、Igor Markovhttps://arxiv.org/abs/quant-ph/0406176'
input:
  content: '(tolerance : Double, coefficients : Double[], control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit)'
  types:
  - name: tolerance
    summary: 小于其小系数的公差将被截断。
    isPrimitive: true
    uid: Double
  - name: coefficients
    summary: 最多 $ 2 ^ n $ 系数 $ \ theta_j $ 的数组。 $J $ th 用于索引以小字节序格式编码的数字状态 $ \ket{j} $。
    isArray: true
    isPrimitive: true
    uid: Double
  - name: control
    summary: $n 以小字节序格式编码数字状态 $ \ket{j} $ 的 qubit 控制寄存器。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: target
    summary: 通过 $e ^ {i P \ theta_j} $ 旋转的单个 qubit 寄存器。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- multiplexz
metadata:
  ms.openlocfilehash: 0c544983871e9b88acb87ddf387700edf0ad7024
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82674437"
