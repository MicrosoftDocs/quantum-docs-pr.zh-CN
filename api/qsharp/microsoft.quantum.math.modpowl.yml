### YamlMime:QSharpType
uid: microsoft.quantum.math.modpowl
name: ModPowL
type: function
namespace: microsoft.quantum.math
summary: 对某个数字进行模块化除法运算，使另一个数字的幂。
remarks: 有关更多详细信息，请参阅[BigInteger。](https://docs.microsoft.com/dotnet/api/system.numerics.biginteger.modpow)
syntax: 'function ModPowL (value : BigInt, exponent : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(value : BigInt, exponent : BigInt, modulus : BigInt)'
  types:
  - name: value
    isPrimitive: true
    uid: BigInt
  - name: exponent
    isPrimitive: true
    uid: BigInt
  - name: modulus
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: 0990f6656d750e7b673278277dd1598c733b19db
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91491476"
