### YamlMime:QSharpType
uid: microsoft.quantum.synthesis.applypermutationusingdecomposition
name: ApplyPermutationUsingDecomposition
type: operation
namespace: microsoft.quantum.synthesis
summary: >-
  使用基于分解的合成，Permutes amplitudes 在量程状态中。


  此过程实现基于分解的合成方法。  输入是一种排列 $ \pi $ over $ 2 ^ n $ 元素 $ \{ 0，\dots ..，2 ^ n-1 \} $，表示 $n $-可变可逆布尔函数。

  算法会对每个可变索引 $i $ 执行以下步骤：


  1. 计算 $ ( # A1 \ pi_l，\ pi_r) ，\pi ' ) $，以便 $ \ pi_l $ 和 $ \ pi_r $ 的图像在其元素中的索引（而不是 $ \pi ' $ 的索引）上更改其元素中的位。

  2. 设置 $ \pi \leftarrow \pi ' $，并基于不是固定点的元素 pi_r $ pi_l 中派生事实数据表。


  将这些步骤应用于所有变量索引后，剩余的排列 $ \pi $ 将是标识，基于收集的事实数据表和索引，可以使用操作来应用事实数据表控制的 @"microsoft.quantum.intrinsic.x" 操作 @"microsoft.quantum.synthesis.applyxcontrolledontruthtable" 。


  变量顺序为 $0、\dots ..、n-$1。  可以在操作中指定自定义变量顺序 @"microsoft.quantum.synthesis.applypermutationusingdecompositionwithvariableorder" 。
examples: >-
  要合成 `SWAP` 操作：


  ```Q#

  using (qubits = Qubit[2]) {
    ApplyPermutationUsingDecomposition([0, 2, 1, 3], LittleEndian(qubits));
  }

  ```
syntax: 'operation ApplyPermutationUsingDecomposition (perm : Int[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
references: >-
  - [*Alexis De Vos*， *Yvan Van Rentergem*，高级. 2 (2) ，2008，pp 183--200](http://www.aimsciences.org/article/doi/10.3934/amc.2008.2.183)

  - [*Mathias Soeken*、 *刘娜 Tague*、 *Gerhard Dueck*、 *Rolf Drechsler*、) 符号计算 73 (2016、pp 1--26](https://www.sciencedirect.com/science/article/pii/S0747717115000188?via%3Dihub)
input:
  content: '(perm : Int[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: perm
    summary: 从0开始的 $ 2 ^ n $ 元素的排列。
    isArray: true
    isPrimitive: true
    uid: Int
  - name: qubits
    summary: 将排列应用到的 $n $ qubits 的列表。
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.synthesis.applypermutationusingdecompositionwithvariableorder
- microsoft.quantum.synthesis.applypermutationusingtransformation
metadata:
  ms.openlocfilehash: 3fd7b84cbf403fe271849ae4d8841a1c8123faa0
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89328077"
