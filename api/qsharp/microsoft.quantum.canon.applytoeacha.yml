### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoeacha
name: ApplyToEachA
type: operation
namespace: microsoft.quantum.canon
summary: >-
  对寄存器中的每个元素应用 qubit 操作。

  修饰符 `A` 指示 qubit 操作是 adjointable。
examples: >-
  准备 qubit $ \ket{+} $ 状态：


  ```qsharp

  using (register = Qubit[3]) {
      ApplyToEach(H, register);
  }

  ```
syntax: "operation ApplyToEachA (singleElementOperation : ('T => Unit is Adj), register : 'T[]) : Unit"
input:
  content: "(singleElementOperation : ('T => Unit is Adj), register : 'T[])"
  types:
  - name: singleElementOperation
    summary: 要应用到每个 qubit 的操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: register
    summary: 要在其上应用给定操作的 qubits 数组。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: 操作的目标。
functors:
- Adjoint
seeAlso:
- microsoft.quantum.canon.applytoeach
metadata:
  ms.openlocfilehash: 3cc032af56c5a3e369677ae3b1f1ba402894f6eb
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91468868"
