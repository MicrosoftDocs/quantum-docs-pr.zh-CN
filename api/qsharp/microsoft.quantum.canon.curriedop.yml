### YamlMime:QSharpType
uid: microsoft.quantum.canon.curriedop
name: CurriedOp
type: function
namespace: microsoft.quantum.canon
summary: >-
  返回对两个输入的操作的扩充版本。


  也就是说，假设有一个具有两个输入的操作，则此函数将应用咖喱的 isomorphism $f (x，y) \equiv f (x) # B4 y) $ 以返回一个输入的操作，该操作返回一个输入的操作。
remarks: >-
  以下项是等效的：


  ```qsharp

  op(x, y);


  let curried = CurriedOp(op);

  let partial = curried(x);

  partial(y);

  ```
syntax: "function CurriedOp (op : (('T, 'U) => Unit)) : ('T -> ('U => Unit))"
input:
  content: "(op : (('T, 'U) => Unit))"
  types:
  - name: op
    summary: 其输入为成对的操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'U"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: ('T -> ('U => Unit))
  types:
  - summary: 一种操作，它接受对的第一个元素，并返回一个接受作为其输入的操作，该操作将原始操作的输入的第二个元素作为输入。
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isOperation: true
        input:
          types:
          - uid: "'U"
            isLocal: true
        output:
          types:
          - isPrimitive: true
            uid: Unit
typeParameters:
- uid: "'T"
  summary: 成对定义的函数的第一个分量的类型。
- uid: "'U"
  summary: 成对定义的函数的第二个分量的类型。
metadata:
  ms.openlocfilehash: 3d3bb45ecd8d06da58dbae096e5eb55c1053c80b
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91471841"
