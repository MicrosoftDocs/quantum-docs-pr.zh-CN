### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.amplitudeamplificationfromstatepreparation
name: AmplitudeAmplificationFromStatePreparation
type: function
namespace: Microsoft.Quantum.AmplitudeAmplification
summary: 用于部分反射的 oracles 放大幅度。
remarks: >-
  这会在开始和目标状态的形式上强制实施更严格`AmpAmpByReflectionPhases`的条件，而不是在中。

  假定目标状态标有 $ \ket{1}\_f $。

  假设在大多数情况下，{0}\_{0}\_{1}\_ `flagQubit` \begin{align} A\ket {f} \ket s = \lambda\ket f\ket {\ text {target\_}} s + \sqrt{1-| \lambda | ^ 2{0}\_} \ket f\cdots，\end{align} 在状态 $ `auxiliaryRegister` \ket{0}\_{f} \ket{0}\_s $ 中进行初始化。
syntax: 'function AmplitudeAmplificationFromStatePreparation (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, stateOracle : Microsoft.Quantum.Oracles.StateOracle, idxFlagQubit : Int) : (Qubit[] => Unit is Adj + Ctl)'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, stateOracle : Microsoft.Quantum.Oracles.StateOracle, idxFlagQubit : Int)'
  types:
  - name: phases
    summary: 部分反射的阶段
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: stateOracle
    summary: 准备开始状态的单一 oracle $A $
    uid: microsoft.quantum.oracles.stateoracle
  - name: idxFlagQubit
    summary: 用于标记 qubit 的索引
    isPrimitive: true
    uid: Int
output:
  content: (Qubit[] => Unit is Adj + Ctl)
  types:
  - summary: 实现由部分反射实现的 oracles 放大幅度的操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: 2d29383db3cebfe1848a1fcee3115fcee0825d4d
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82676967"
