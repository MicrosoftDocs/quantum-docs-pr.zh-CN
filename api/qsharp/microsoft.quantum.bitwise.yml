### YamlMime:QSharpNamespace
functions:
- summary: 返回两个整数的按位 "与"。 这会执行与内置运算符相同的计算 `&&&` 。
  uid: Microsoft.Quantum.Bitwise.And
- summary: 将数字的按位表示形式向左移动给定的位数。
  uid: Microsoft.Quantum.Bitwise.LeftShiftedI
- summary: 将数字的按位表示形式向左移动给定的位数。
  uid: Microsoft.Quantum.Bitwise.LeftShiftedL
- summary: 返回整数的按位 "非"。 这会执行与内置运算符相同的计算 `~~~` 。
  uid: Microsoft.Quantum.Bitwise.Not
- summary: 返回两个整数的按位 "或"。 这会执行与内置运算符相同的计算 `|||` 。
  uid: Microsoft.Quantum.Bitwise.Or
- summary: 如果整数的二进制表示形式包含奇数个值，则返回 (1 的整数的按位奇偶校验，否则) 。
  uid: Microsoft.Quantum.Bitwise.Parity
- summary: 将数字的按位表示形式向右移位给定的位数。
  uid: Microsoft.Quantum.Bitwise.RightShiftedI
- summary: 将数字的按位表示形式向右移位给定的位数。
  uid: Microsoft.Quantum.Bitwise.RightShiftedL
- summary: 返回一个整数，该整数表示 Pauli 运算符数组的 X 位。
  uid: Microsoft.Quantum.Bitwise.XBits
- summary: 返回两个整数的按位异或 (XOR) 。 这会执行与内置运算符相同的计算 `^^^` 。
  uid: Microsoft.Quantum.Bitwise.Xor
- summary: 返回一个整数，该整数表示 Pauli 运算符数组的 Z 位。
  uid: Microsoft.Quantum.Bitwise.ZBits
name: Microsoft.Quantum.Bitwise
newtypes: []
operations: []
summary: 此命名空间包含用于对传统数据类型的按位表示形式进行操作的函数。
uid: Microsoft.Quantum.Bitwise
metadata:
  ms.openlocfilehash: 6730a0350f56c2356b9c0851b37de1cd277da90f
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92696513"
