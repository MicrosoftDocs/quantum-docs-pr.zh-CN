### YamlMime:QSharpType
uid: microsoft.quantum.math.expmodl
name: ExpModL
type: function
namespace: microsoft.quantum.math
summary: >-
  返回一个整数，该整数针对给定的模数引发了给定的幂。


  让我们通过 $N $ $p $ 和模数来表示 $x expBase。

  该函数返回 $x ^ p \operatorname{mod} N $。


  假定 $N $，$x $ 为正，且 power 为非负数。
remarks: 与中的位数成正比，而 `power` 不是 `power` 本身。
syntax: 'function ExpModL (expBase : BigInt, power : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(expBase : BigInt, power : BigInt, modulus : BigInt)'
  types:
  - name: expBase
    isPrimitive: true
    uid: BigInt
  - name: power
    isPrimitive: true
    uid: BigInt
  - name: modulus
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: f5f7d5c4a51055583f3c5fd04315af8ee0dfc0c4
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89344125"
