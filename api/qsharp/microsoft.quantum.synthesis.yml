### YamlMime:QSharpNamespace
functions:
- summary: 对变量分解
  uid: Microsoft.Quantum.Synthesis.DecomposedOn
- summary: '{1,-1}编码事实数据表'
  uid: Microsoft.Quantum.Synthesis.Encoded
- summary: 通过反转系数扩展色谱
  uid: Microsoft.Quantum.Synthesis.Extended
- summary: '{-1,1}使用 fisher-yates 的方法计算使用编码的布尔函数的 Hadamard 转换'
  uid: Microsoft.Quantum.Synthesis.FastHadamardTransformed
- summary: 如果目标不是0，则将 MCMTMask 类型构造为单一数组，否则返回空数组。
  uid: Microsoft.Quantum.Synthesis.GateMask
- summary: 计算多达两个 MCMT 掩码，以将 y 转换为 x。
  uid: Microsoft.Quantum.Synthesis.GateMasksForAssignment
- summary: 返回在其中设置整数位的所有位置。
  uid: Microsoft.Quantum.Synthesis.IntegerBits
- summary: 将控制和目标位的掩码转换为一对控件 qubits 和目标 qubits
  uid: Microsoft.Quantum.Synthesis.MaskToQubitsPair
- summary: '{-1,1} 布尔值事实值的编码'
  uid: Microsoft.Quantum.Synthesis.RMEncoding
- summary: 根据变量的数量，根据变量的数量调整事实数据表新数组的长度返回 `2^numVars` ，可能要求 `table` 使用条目扩展大小 `false` 或将其截断到 `2^numVars` 元素。
  uid: Microsoft.Quantum.Synthesis.SizeAdjustedTruthTable
- summary: 计算用于合成排列的入口掩码。
  uid: Microsoft.Quantum.Synthesis.TBSMain
- summary: 计算用于将永久状态 [x] 转换为 x 并更新当前排列的入口掩码。
  uid: Microsoft.Quantum.Synthesis.TBSStep
- summary: 通过折叠所有变量索引来收集受控入口的所有函数
  uid: Microsoft.Quantum.Synthesis.TruthTablesFromPermutation
- summary: 单个变量索引的分解逻辑
  uid: Microsoft.Quantum.Synthesis.TruthTablesFromPermutationFolder
- summary: 根据入口掩码更新输出模式。
  uid: Microsoft.Quantum.Synthesis.UpdatedOutputPattern
- summary: 根据入口掩码更新排列。
  uid: Microsoft.Quantum.Synthesis.UpdatedPermutation
- summary: 将0位插入到整数中
  uid: Microsoft.Quantum.Synthesis.WithZeroInsertedAt
name: Microsoft.Quantum.Synthesis
newtypes:
- summary: 基于变量索引的分解过程中的状态
  uid: Microsoft.Quantum.Synthesis.DecompositionState
- summary: >-
    一种类型，用于表示多受控多目标 Toffoli 入口。

    第一个整数是控件行的位掩码。  设置对应于控件行索引的位索引。

    第二个整数是目标行的位掩码。  设置对应于目标行索引的位索引。

    这两个整数的位索引必须是不连续的。
  uid: Microsoft.Quantum.Synthesis.MCMTMask
operations:
- summary: 使用基于分解的合成，Permutes amplitudes 在量程状态中。
  uid: Microsoft.Quantum.Synthesis.ApplyPermutationUsingDecomposition
- summary: 使用基于分解的合成，Permutes amplitudes 在量程状态中。
  uid: Microsoft.Quantum.Synthesis.ApplyPermutationUsingDecompositionWithVariableOrder
- summary: 使用基于转换的合成，将 amplitudes Permutes 为量程状态。
  uid: Microsoft.Quantum.Synthesis.ApplyPermutationUsingTransformation
- summary: ''
  uid: Microsoft.Quantum.Synthesis.ApplyTransposition
- summary: '@"microsoft.quantum.intrinsic.x" `target` 如果布尔函数的 `func` 计算结果为 true （对于中的传统分配），则应用操作 `controlRegister` 。'
  uid: Microsoft.Quantum.Synthesis.ApplyXControlledOnTruthTable
- summary: '@"microsoft.quantum.intrinsic.x" `target` 如果布尔函数的 `func` 计算结果为 true （对于中的传统分配），则应用操作 `controlRegister` 。'
  uid: Microsoft.Quantum.Synthesis.ApplyXControlledOnTruthTableWithCleanTarget
summary: 此命名空间包含基于排列和布尔函数的综合量程操作的函数和操作。
uid: Microsoft.Quantum.Synthesis
metadata:
  ms.openlocfilehash: 2f92f4662252148ff0e093f5392f5f00f26b661f
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92701209"
