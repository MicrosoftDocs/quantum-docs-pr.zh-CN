### YamlMime:QSharpType
uid: microsoft.quantum.canon.applypaulifrombitstring
name: ApplyPauliFromBitString
type: operation
namespace: microsoft.quantum.canon
summary: 如果布尔数组的相应位与给定的输入相匹配，则对数组中的每个 qubit 应用 Pauli 运算符。
remarks: 布尔数组和量程寄存器的长度必须相等。
syntax: 'operation ApplyPauliFromBitString (pauli : Pauli, bitApply : Bool, bits : Bool[], qubits : Qubit[]) : Unit'
input:
  content: '(pauli : Pauli, bitApply : Bool, bits : Bool[], qubits : Qubit[])'
  types:
  - name: pauli
    summary: 要应用于 `qubits[idx]` where 的 Pauli 运算符 `bitsApply == bits[idx]`
    isPrimitive: true
    uid: Pauli
  - name: bitApply
    summary: 如果 bit 为此值，则应用 Pauli
    isPrimitive: true
    uid: Bool
  - name: bits
    summary: 指定应操作的相应 qubit 的布尔型寄存器 `qubits`
    isArray: true
    isPrimitive: true
    uid: Bool
  - name: qubits
    summary: 量程注册，可以选择应用指定的 Pauli 运算符
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 7efea4ea34ee1ae68695aa74142ebf6bce93d289
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89357963"
