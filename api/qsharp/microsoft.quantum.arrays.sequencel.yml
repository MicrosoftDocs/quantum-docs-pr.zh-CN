### YamlMime:QSharpType
uid: microsoft.quantum.arrays.sequencel
name: SequenceL
type: function
namespace: Microsoft.Quantum.Arrays
summary: 获取给定时间间隔内的整数数组。
remarks: '`from` 和 `to` 之间的差异必须适合 `Int` 值。'
examples: >-
  ```qsharp

  let arr1 = SequenceL(0L, 3L); // [0L, 1L, 2L, 3L]

  let arr2 = SequenceL(23L, 29L); // [23L, 24L, 25L, 26L, 27L, 28L, 29L]

  let arr3 = SequenceL(-5L, -2L); // [-5L, -4L, -3L, -2L]

  ```
syntax: 'function SequenceL (from : BigInt, to : BigInt) : BigInt[]'
input:
  content: '(from : BigInt, to : BigInt)'
  types:
  - name: from
    summary: 间隔的包含开始索引。
    isPrimitive: true
    uid: BigInt
  - name: to
    summary: 间隔不小于 `from`的非独占结束索引。
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt[]
  types:
  - summary: 一个数组，其中包含数字序列 `from`、`from + 1`、... `to`。
    isArray: true
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: 09d5798b0311285e671bc5ed1f9358c557a74946
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73217982"
