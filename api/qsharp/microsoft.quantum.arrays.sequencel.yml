### YamlMime:QSharpType
uid: microsoft.quantum.arrays.sequencel
name: SequenceL
type: function
namespace: Microsoft.Quantum.Arrays
summary: 获取给定时间间隔内的整数数组。
remarks: 与`from` `to`之间的差异必须符合某个`Int`值。
examples: >-
  ```qsharp

  let arr1 = SequenceL(0L, 3L); // [0L, 1L, 2L, 3L]

  let arr2 = SequenceL(23L, 29L); // [23L, 24L, 25L, 26L, 27L, 28L, 29L]

  let arr3 = SequenceL(-5L, -2L); // [-5L, -4L, -3L, -2L]

  ```
syntax: 'function SequenceL (from : BigInt, to : BigInt) : BigInt[]'
input:
  content: '(from : BigInt, to : BigInt)'
  types:
  - name: from
    summary: 间隔的包含开始索引。
    isPrimitive: true
    uid: BigInt
  - name: to
    summary: 不小于的间隔的非独占结束索引`from`。
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt[]
  types:
  - summary: 一个包含数字`from`序列的数组， `from + 1`，...，。 `to`
    isArray: true
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: 7271856286009cfd1651f19f69f932e79d79c2bf
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82680815"
