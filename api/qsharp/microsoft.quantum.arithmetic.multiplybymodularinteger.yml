### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplybymodularinteger
name: MultiplyByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  对 qubit 寄存器上的整数常量执行模块化乘法运算。


  让我们通过 $a $ $N $ 和 `constMultiplier` 来表示 `modulus`。

  然后，此操作实现由以下映射定义的单一操作：对于每个 $0 $ 和 $N-$1 $y $ $ $ \begin{align} \ket{y} \mapsto \ket{（a \cdot y） \operatorname{mod} N} \end{align} $ $。
remarks: >-
  - 对于 "线路" 关系图和解释，请参阅[arXiv 的第8页上的图7： quant/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=8)

  - 此操作对应于 ArXiv 中的 U ₐ [： quant/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf)
syntax: 'operation MultiplyByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: constMultiplier
    summary: 乘数相乘的常量。 必须与模数共同。
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: 乘法运算执行取模 `modulus`。
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: >-
      与常量相乘的数字。

      这是一个 qubits 编码数组，用小 endian 格式的整数编码。
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 49d46d1dda5afaf4a35667ec98d24aeb51beba1f
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76871373"
