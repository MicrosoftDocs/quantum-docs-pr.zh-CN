### YamlMime:QSharpType
uid: microsoft.quantum.arrays.subarray
name: Subarray
type: function
namespace: Microsoft.Quantum.Arrays
summary: 采用一个数组和一个位置列表，并生成一个新数组，该数组由与给定位置匹配的原始数组的元素构成。
remarks: >-
  函数是为泛型类型定义的，也就是说，只要有一个数组 `'T[]` 和一个位置列表 `Int[]` 定义子数组。

  子数组的构造是基于生成给定数组的新深层副本的，而不是维护引用。


  如果 `Length(indices) < Length(array)`，则此函数将返回 `array`的子集。 另一方面，如果 `indices` 包含重复的元素，则 `array` 的相应元素也会重复出现。

  如果 `indices` 和 `array` 的长度相同，则此函数将提供 `array`的排列。
syntax: "function Subarray (indices : Int[], array : 'T[]) : 'T[]"
input:
  content: "(indices : Int[], array : 'T[])"
  types:
  - name: indices
    summary: 用于定义子数组的整数的列表。
    isArray: true
    isPrimitive: true
    uid: Int
  - name: array
    summary: "`'T`上的元素的数组。"
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[]"
  types:
  - summary: 数组 `out` 其索引对应于子数组的元素，以便 `out[idx] == array[indices[idx]]`。
    isArray: true
    uid: "'T"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: '`array` 元素的类型。'
metadata:
  ms.openlocfilehash: 1590e5c24dad56db8c6a0f5dc433bf060d8ac175
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73217846"
